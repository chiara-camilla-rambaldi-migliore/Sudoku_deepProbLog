#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,21.648916006088257,4.1383891105651855,21.389914989471436,0.09178805351257324,0.09688997268676758
3,42.96373510360718,3.756314754486084,21.051802158355713,0.0941309928894043,0.09883379936218262
4,64.38366222381592,2.0494446754455566,21.150094985961914,0.09551000595092773,0.0994880199432373
5,85.84582209587097,0.054789043962955475,21.19878911972046,0.09415912628173828,0.0974271297454834
6,108.53560400009155,3.814704541582614e-06,22.526469230651855,0.07265520095825195,0.053917884826660156
7,129.91312503814697,0.0,21.2011079788208,0.07775187492370605,0.061242103576660156
8,151.26529598236084,0.0,21.18486785888672,0.07474613189697266,0.06041383743286133
9,172.7410728931427,0.0,21.34694218635559,0.028248071670532227,0.06515884399414062
10,193.9780249595642,0.0,21.117720127105713,0.028157949447631836,0.0591120719909668
11,215.39599204063416,0.0,21.292915105819702,0.028033018112182617,0.05911397933959961
12,236.97685408592224,0.0,21.460013151168823,0.02923870086669922,0.06068015098571777
13,258.2519540786743,0.0,21.153756141662598,0.028923988342285156,0.05868983268737793
14,279.47198605537415,0.0,21.097784996032715,0.029368877410888672,0.05890202522277832
15,300.7293200492859,0.0,21.135406732559204,0.028355121612548828,0.05901813507080078
16,321.951632976532,0.0,21.098862171173096,0.028718948364257812,0.0584719181060791
17,343.3440079689026,0.0,21.265672206878662,0.030440092086791992,0.06007885932922363
18,364.363646030426,0.0,20.890865325927734,0.0288541316986084,0.06018567085266113
19,389.55110216140747,0.0,25.042648792266846,0.035370826721191406,0.06961488723754883
20,413.0786290168762,0.0,23.402631998062134,0.0279538631439209,0.06333231925964355
21,413.1723442077637,0.0,21.389914989471436,0.09178805351257324,0.056572914123535156
22,413.26229095458984,0.0,21.051802158355713,0.0941309928894043,0.05654191970825195
23,413.37425422668457,0.0,21.150094985961914,0.09551000595092773,0.07266712188720703
24,413.49153208732605,0.0,21.19878911972046,0.09415912628173828,0.07591581344604492
25,413.60891604423523,0.0,22.526469230651855,0.07265520095825195,0.07566428184509277
26,413.727117061615,0.0,21.2011079788208,0.07775187492370605,0.07575511932373047
27,413.83802604675293,0.0,21.18486785888672,0.07474613189697266,0.06873703002929688
28,413.94778084754944,0.0,21.34694218635559,0.028248071670532227,0.06645679473876953
29,414.05714321136475,0.0,21.117720127105713,0.028157949447631836,0.06717967987060547
30,414.17690920829773,0.0,21.292915105819702,0.028033018112182617,0.07609796524047852
31,414.2848401069641,0.0,21.460013151168823,0.02923870086669922,0.06812596321105957
32,414.3921570777893,0.0,21.153756141662598,0.028923988342285156,0.06657290458679199
33,414.5012991428375,0.0,21.097784996032715,0.029368877410888672,0.06743597984313965
34,414.6083071231842,0.0,21.135406732559204,0.028355121612548828,0.0658879280090332
35,414.71758103370667,0.0,21.098862171173096,0.028718948364257812,0.06938481330871582
36,414.82878398895264,0.0,21.265672206878662,0.030440092086791992,0.06995201110839844
37,414.940691947937,0.0,20.890865325927734,0.0288541316986084,0.06862688064575195
38,415.0607199668884,0.0,25.042648792266846,0.035370826721191406,0.07393598556518555
39,415.1743290424347,0.0,23.402631998062134,0.0279538631439209,0.07002115249633789
40,415.2833249568939,0.0,21.389914989471436,0.09178805351257324,0.06867003440856934
41,415.39033913612366,0.0,21.051802158355713,0.0941309928894043,0.06585812568664551
42,415.4951319694519,0.0,21.150094985961914,0.09551000595092773,0.06614398956298828
43,415.60622215270996,0.0,21.19878911972046,0.09415912628173828,0.07269024848937988
44,415.7113528251648,0.0,22.526469230651855,0.07265520095825195,0.06638693809509277
45,415.82348918914795,0.0,21.2011079788208,0.07775187492370605,0.06953787803649902
46,415.9306969642639,0.0,21.18486785888672,0.07474613189697266,0.0651559829711914
47,416.04199504852295,0.0,21.34694218635559,0.028248071670532227,0.0692131519317627
48,416.15179920196533,0.0,21.117720127105713,0.028157949447631836,0.06805610656738281
49,416.26201701164246,0.0,21.292915105819702,0.028033018112182617,0.06591677665710449
50,416.3767430782318,0.0,21.460013151168823,0.02923870086669922,0.06983113288879395
51,416.48670387268066,0.0,21.153756141662598,0.028923988342285156,0.06954288482666016
52,416.5960359573364,0.0,21.097784996032715,0.029368877410888672,0.0663301944732666
53,416.70687913894653,0.0,21.135406732559204,0.028355121612548828,0.06886029243469238
54,416.8166410923004,0.0,21.098862171173096,0.028718948364257812,0.0652153491973877
55,416.93465089797974,0.0,21.265672206878662,0.030440092086791992,0.07122206687927246
56,417.0448741912842,0.0,20.890865325927734,0.0288541316986084,0.06435704231262207
57,417.1642780303955,0.0,25.042648792266846,0.035370826721191406,0.07350873947143555
58,417.27407693862915,0.0,23.402631998062134,0.0279538631439209,0.06705999374389648
59,417.38714814186096,0.0,21.389914989471436,0.09178805351257324,0.06798291206359863
60,417.4952600002289,0.0,21.051802158355713,0.0941309928894043,0.06553196907043457
61,417.6077380180359,0.0,21.150094985961914,0.09551000595092773,0.0702519416809082
62,417.71313309669495,0.0,21.19878911972046,0.09415912628173828,0.06494712829589844
63,417.83766412734985,0.0,22.526469230651855,0.07265520095825195,0.07598471641540527
64,417.97347807884216,0.0,21.2011079788208,0.07775187492370605,0.08517909049987793
65,418.10948610305786,0.0,21.18486785888672,0.07474613189697266,0.08729195594787598
66,418.2348790168762,0.0,21.34694218635559,0.028248071670532227,0.07953786849975586
67,418.36159491539,0.0,21.117720127105713,0.028157949447631836,0.07727909088134766
68,418.484582901001,0.0,21.292915105819702,0.028033018112182617,0.07691788673400879
69,418.6097831726074,0.0,21.460013151168823,0.02923870086669922,0.07711601257324219
70,418.7371680736542,0.0,21.153756141662598,0.028923988342285156,0.07984280586242676
71,418.8623628616333,0.0,21.097784996032715,0.029368877410888672,0.07734489440917969
72,418.9876880645752,0.0,21.135406732559204,0.028355121612548828,0.07934212684631348
73,419.11391401290894,0.0,21.098862171173096,0.028718948364257812,0.07835817337036133
74,419.2438201904297,0.0,21.265672206878662,0.030440092086791992,0.07872390747070312
75,419.3795540332794,0.0,20.890865325927734,0.0288541316986084,0.08369302749633789
76,419.50406312942505,0.0,25.042648792266846,0.035370826721191406,0.07815098762512207
77,419.6277151107788,0.0,23.402631998062134,0.0279538631439209,0.07884526252746582
78,419.748792886734,0.0,21.389914989471436,0.09178805351257324,0.07513308525085449
79,419.86656498908997,0.0,21.051802158355713,0.0941309928894043,0.07501602172851562
80,419.99022698402405,0.0,21.150094985961914,0.09551000595092773,0.07728791236877441
81,420.1108989715576,0.0,21.19878911972046,0.09415912628173828,0.07551217079162598
82,420.22809290885925,0.0,22.526469230651855,0.07265520095825195,0.07503819465637207
83,420.35187315940857,0.0,21.2011079788208,0.07775187492370605,0.07701516151428223
84,420.47275400161743,0.0,21.18486785888672,0.07474613189697266,0.07489609718322754
85,420.5922918319702,0.0,21.34694218635559,0.028248071670532227,0.07470893859863281
86,420.7126350402832,0.0,21.117720127105713,0.028157949447631836,0.0748741626739502
87,420.8375072479248,0.0,21.292915105819702,0.028033018112182617,0.0778498649597168
88,420.9586319923401,0.0,21.460013151168823,0.02923870086669922,0.07757091522216797
89,421.08050894737244,0.0,21.153756141662598,0.028923988342285156,0.07558727264404297
90,421.2017638683319,0.0,21.097784996032715,0.029368877410888672,0.07592296600341797
91,421.31996297836304,0.0,21.135406732559204,0.028355121612548828,0.07492709159851074
92,421.4451470375061,0.0,21.098862171173096,0.028718948364257812,0.07976889610290527
93,421.56594705581665,0.0,21.265672206878662,0.030440092086791992,0.07522201538085938
94,421.68853521347046,0.0,20.890865325927734,0.0288541316986084,0.07594704627990723
95,421.81059527397156,0.0,25.042648792266846,0.035370826721191406,0.07592415809631348
96,421.9324049949646,0.0,23.402631998062134,0.0279538631439209,0.0758819580078125