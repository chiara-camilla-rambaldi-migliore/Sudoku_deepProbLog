#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,16.753479957580566,4.0976481437683105,16.51916813850403,0.05864286422729492,0.07404279708862305
3,34.046963930130005,3.681382656097412,17.060386896133423,0.0621190071105957,0.07660198211669922
4,51.230926752090454,2.1284899711608887,16.96155595779419,0.06287217140197754,0.07320117950439453
5,68.39629912376404,0.11580759286880493,16.92917490005493,0.06863808631896973,0.07535982131958008
6,85.71972894668579,1.6689314179529902e-06,17.167972087860107,0.06845903396606445,0.04291391372680664
7,103.08433699607849,0.0,17.182895183563232,0.0838160514831543,0.043183088302612305
8,120.12446284294128,0.0,16.876333951950073,0.07936310768127441,0.04139590263366699
9,137.37427592277527,0.0,17.136164665222168,0.02229619026184082,0.05015301704406738
10,154.2633728981018,0.0,16.788151025772095,0.0229339599609375,0.04616689682006836
11,170.7797930240631,0.0,16.401968955993652,0.027142763137817383,0.04565000534057617
12,187.2721197605133,0.0,16.385389804840088,0.021989107131958008,0.04630613327026367
13,203.77658796310425,0.0,16.400681018829346,0.02421712875366211,0.04563403129577637
14,220.45446586608887,0.0,16.57274889945984,0.023048877716064453,0.045336008071899414
15,236.92842388153076,0.0,16.34584403038025,0.045890092849731445,0.046373844146728516
16,253.46586179733276,0.0,16.421941995620728,0.025903940200805664,0.04700207710266113
17,269.98066997528076,0.0,16.405411958694458,0.02255105972290039,0.04971718788146973
18,286.5524649620056,0.0,16.46706986427307,0.02179884910583496,0.05169987678527832
19,302.8000247478485,0.0,16.121953010559082,0.030584096908569336,0.04310488700866699
20,319.2694847583771,0.0,16.36434817314148,0.022117137908935547,0.0454409122467041
21,319.3445870876312,0.0,16.51916813850403,0.05864286422729492,0.039105892181396484
22,319.4254620075226,0.0,17.060386896133423,0.0621190071105957,0.03947806358337402
23,319.51019191741943,0.0,16.96155595779419,0.06287217140197754,0.03870511054992676
24,319.5978398323059,0.0,16.92917490005493,0.06863808631896973,0.039933204650878906
25,319.679034948349,0.0,17.167972087860107,0.06845903396606445,0.03838491439819336
26,319.75876474380493,0.0,17.182895183563232,0.0838160514831543,0.038416147232055664
27,319.8394618034363,0.0,16.876333951950073,0.07936310768127441,0.03922677040100098
28,319.91728115081787,0.0,17.136164665222168,0.02229619026184082,0.037499189376831055
29,319.9963159561157,0.0,16.788151025772095,0.0229339599609375,0.03813004493713379
30,320.07385778427124,0.0,16.401968955993652,0.027142763137817383,0.03811216354370117
31,320.14837098121643,0.0,16.385389804840088,0.021989107131958008,0.03752398490905762
32,320.2192859649658,0.0,16.400681018829346,0.02421712875366211,0.038038015365600586
33,320.29205203056335,0.0,16.57274889945984,0.023048877716064453,0.037724971771240234
34,320.3685350418091,0.0,16.34584403038025,0.045890092849731445,0.04009819030761719
35,320.4437940120697,0.0,16.421941995620728,0.025903940200805664,0.04000997543334961
36,320.5207419395447,0.0,16.405411958694458,0.02255105972290039,0.03963303565979004
37,320.5933299064636,0.0,16.46706986427307,0.02179884910583496,0.03747105598449707
38,320.6663420200348,0.0,16.121953010559082,0.030584096908569336,0.03698897361755371
39,320.73779106140137,0.0,16.36434817314148,0.022117137908935547,0.03617095947265625
40,320.8139657974243,0.0,16.51916813850403,0.05864286422729492,0.036871910095214844
41,320.8801968097687,0.0,17.060386896133423,0.0621190071105957,0.03726696968078613
42,320.99781680107117,0.0,16.96155595779419,0.06287217140197754,0.03839707374572754
43,321.07937693595886,0.0,16.92917490005493,0.06863808631896973,0.03708910942077637
44,321.1546459197998,0.0,17.167972087860107,0.06845903396606445,0.0373842716217041
45,321.22610688209534,0.0,17.182895183563232,0.0838160514831543,0.03741097450256348
46,321.3004140853882,0.0,16.876333951950073,0.07936310768127441,0.038861989974975586
47,321.37284994125366,0.0,17.136164665222168,0.02229619026184082,0.03803205490112305
48,321.4502558708191,0.0,16.788151025772095,0.0229339599609375,0.03931093215942383
49,321.58444595336914,0.0,16.401968955993652,0.027142763137817383,0.04039406776428223
50,321.65900897979736,0.0,16.385389804840088,0.021989107131958008,0.03749799728393555
51,321.7399570941925,0.0,16.400681018829346,0.02421712875366211,0.03951907157897949
52,321.81343173980713,0.0,16.57274889945984,0.023048877716064453,0.03867387771606445
53,321.88829588890076,0.0,16.34584403038025,0.045890092849731445,0.03922462463378906
54,321.96862173080444,0.0,16.421941995620728,0.025903940200805664,0.039238929748535156
55,322.0428297519684,0.0,16.405411958694458,0.02255105972290039,0.03909778594970703
56,322.11610889434814,0.0,16.46706986427307,0.02179884910583496,0.03831791877746582
57,322.1979238986969,0.0,16.121953010559082,0.030584096908569336,0.039389848709106445
58,322.2709970474243,0.0,16.36434817314148,0.022117137908935547,0.03759002685546875
59,322.3472390174866,0.0,16.51916813850403,0.05864286422729492,0.03910493850708008
60,322.43023896217346,0.0,17.060386896133423,0.0621190071105957,0.04098987579345703
61,322.50650095939636,0.0,16.96155595779419,0.06287217140197754,0.04050731658935547
62,322.57761907577515,0.0,16.92917490005493,0.06863808631896973,0.04053807258605957
63,322.6526229381561,0.0,17.167972087860107,0.06845903396606445,0.03948211669921875
64,322.73024106025696,0.0,17.182895183563232,0.0838160514831543,0.0377659797668457
65,322.8017408847809,0.0,16.876333951950073,0.07936310768127441,0.03723001480102539
66,322.8745219707489,0.0,17.136164665222168,0.02229619026184082,0.03732800483703613
67,322.9555459022522,0.0,16.788151025772095,0.0229339599609375,0.0408320426940918
68,323.03334188461304,0.0,16.401968955993652,0.027142763137817383,0.039457082748413086
69,323.1103448867798,0.0,16.385389804840088,0.021989107131958008,0.03954720497131348
70,323.1768567562103,0.0,16.400681018829346,0.02421712875366211,0.038847923278808594
71,323.24476075172424,0.0,16.57274889945984,0.023048877716064453,0.03800702095031738
72,323.31488585472107,0.0,16.34584403038025,0.045890092849731445,0.04012894630432129
73,323.3897888660431,0.0,16.421941995620728,0.025903940200805664,0.03988385200500488
74,323.46276688575745,0.0,16.405411958694458,0.02255105972290039,0.04135489463806152
75,323.53829884529114,0.0,16.46706986427307,0.02179884910583496,0.039700984954833984
76,323.6182789802551,0.0,16.121953010559082,0.030584096908569336,0.03958773612976074
77,323.69860887527466,0.0,16.36434817314148,0.022117137908935547,0.03993797302246094
78,323.77929878234863,0.0,16.51916813850403,0.05864286422729492,0.03936266899108887
79,323.8560600280762,0.0,17.060386896133423,0.0621190071105957,0.039031028747558594
80,323.93242502212524,0.0,16.96155595779419,0.06287217140197754,0.03908181190490723
81,324.010470867157,0.0,16.92917490005493,0.06863808631896973,0.03880500793457031
82,324.0911569595337,0.0,17.167972087860107,0.06845903396606445,0.03841686248779297
83,324.1649308204651,0.0,17.182895183563232,0.0838160514831543,0.03728985786437988
84,324.23947286605835,0.0,16.876333951950073,0.07936310768127441,0.038496971130371094
85,324.31481289863586,0.0,17.136164665222168,0.02229619026184082,0.038149118423461914
86,324.3923337459564,0.0,16.788151025772095,0.0229339599609375,0.038494110107421875
87,324.47379302978516,0.0,16.401968955993652,0.027142763137817383,0.039762020111083984
88,324.545126914978,0.0,16.385389804840088,0.021989107131958008,0.040107011795043945
89,324.61388397216797,0.0,16.400681018829346,0.02421712875366211,0.038125038146972656
90,324.6902070045471,0.0,16.57274889945984,0.023048877716064453,0.037709712982177734
91,324.7598350048065,0.0,16.34584403038025,0.045890092849731445,0.03665590286254883
92,324.82881593704224,0.0,16.421941995620728,0.025903940200805664,0.03658127784729004
93,324.90105080604553,0.0,16.405411958694458,0.02255105972290039,0.03828883171081543
94,324.97878885269165,0.0,16.46706986427307,0.02179884910583496,0.038160085678100586
95,325.0544719696045,0.0,16.121953010559082,0.030584096908569336,0.037652015686035156
96,325.1254539489746,0.0,16.36434817314148,0.022117137908935547,0.03712916374206543