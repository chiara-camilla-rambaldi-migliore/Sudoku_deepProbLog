#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,27.648698806762695,4.1421098709106445,27.284879207611084,0.11889505386352539,0.15288400650024414
3,55.65784406661987,3.80997633934021,27.662064790725708,0.11223316192626953,0.1455700397491455
4,84.80701899528503,2.640838384628296,28.83900809288025,0.08555269241333008,0.14188599586486816
5,112.31574392318726,0.3516368567943573,27.19913077354431,0.08188700675964355,0.13501501083374023
6,139.88194513320923,0.00034827098716050386,27.270039081573486,0.08471322059631348,0.12959504127502441
7,687.0731379985809,0.0,546.9096391201019,0.11530709266662598,0.09101605415344238
8,715.0022339820862,0.0,27.696860790252686,0.10396170616149902,0.0807950496673584
9,746.4477288722992,0.0,31.15913200378418,0.05331897735595703,0.12121391296386719
10,774.7696130275726,0.0,28.168988943099976,0.033429861068725586,0.07720303535461426
11,804.3375627994537,0.0,29.378542184829712,0.04425477981567383,0.09450888633728027
12,834.6616199016571,0.0,30.13350486755371,0.04232192039489746,0.09386491775512695
13,864.9518961906433,0.0,30.114804983139038,0.038787841796875,0.09027814865112305
14,893.052258014679,0.0,27.926440954208374,0.0360112190246582,0.09030508995056152
15,922.4395530223846,0.0,29.19204306602478,0.04673409461975098,0.09386920928955078
16,958.1862118244171,0.0,35.55228114128113,0.043515920639038086,0.08929896354675293
17,994.9128940105438,0.0,36.535593032836914,0.042697906494140625,0.09186482429504395
18,1034.308058977127,0.0,39.1259868144989,0.05695700645446777,0.12888598442077637
19,1073.0899431705475,0.0,38.497584104537964,0.04891800880432129,0.12845325469970703
20,1112.938952922821,0.0,39.61663103103638,0.061170101165771484,0.11162233352661133
21,1113.0781400203705,0.0,27.284879207611084,0.11889505386352539,0.07831501960754395
22,1113.2165489196777,0.0,27.662064790725708,0.11223316192626953,0.07816100120544434
23,1113.3826849460602,0.0,28.83900809288025,0.08555269241333008,0.10304903984069824
24,1113.5822820663452,0.0,27.19913077354431,0.08188700675964355,0.1231381893157959
25,1113.7629919052124,0.0,27.270039081573486,0.08471322059631348,0.10873579978942871
26,1113.9624528884888,0.0,546.9096391201019,0.11530709266662598,0.10048890113830566
27,1114.1560530662537,0.0,27.696860790252686,0.10396170616149902,0.10162878036499023
28,1114.3034269809723,0.0,31.15913200378418,0.05331897735595703,0.0836641788482666
29,1114.4486711025238,0.0,28.168988943099976,0.033429861068725586,0.08075594902038574
30,1114.5922949314117,0.0,29.378542184829712,0.04425477981567383,0.08517098426818848
31,1114.7292008399963,0.0,30.13350486755371,0.04232192039489746,0.08006119728088379
32,1114.8668868541718,0.0,30.114804983139038,0.038787841796875,0.08035087585449219
33,1115.0041511058807,0.0,27.926440954208374,0.0360112190246582,0.07950019836425781
34,1115.1417038440704,0.0,29.19204306602478,0.04673409461975098,0.08115601539611816
35,1115.2799360752106,0.0,35.55228114128113,0.043515920639038086,0.08273530006408691
36,1115.4156370162964,0.0,36.535593032836914,0.042697906494140625,0.08357787132263184
37,1115.550990819931,0.0,39.1259868144989,0.05695700645446777,0.08017396926879883
38,1115.6799280643463,0.0,38.497584104537964,0.04891800880432129,0.0760798454284668
39,1115.8089668750763,0.0,39.61663103103638,0.061170101165771484,0.07547593116760254
40,1115.9421918392181,0.0,27.284879207611084,0.11889505386352539,0.08230280876159668
41,1116.0699429512024,0.0,27.662064790725708,0.11223316192626953,0.07977604866027832
42,1116.1975648403168,0.0,28.83900809288025,0.08555269241333008,0.07808303833007812
43,1116.3343420028687,0.0,27.19913077354431,0.08188700675964355,0.07918596267700195
44,1116.4841210842133,0.0,27.270039081573486,0.08471322059631348,0.08008193969726562
45,1116.6282370090485,0.0,546.9096391201019,0.11530709266662598,0.0807962417602539
46,1116.764357805252,0.0,27.696860790252686,0.10396170616149902,0.08286905288696289
47,1116.902046918869,0.0,31.15913200378418,0.05331897735595703,0.08401036262512207
48,1117.0331950187683,0.0,28.168988943099976,0.033429861068725586,0.07980608940124512
49,1117.1670610904694,0.0,29.378542184829712,0.04425477981567383,0.07918095588684082
50,1117.3028948307037,0.0,30.13350486755371,0.04232192039489746,0.07546091079711914
51,1117.4415218830109,0.0,30.114804983139038,0.038787841796875,0.0794680118560791
52,1117.576800107956,0.0,27.926440954208374,0.0360112190246582,0.08050107955932617
53,1117.712905883789,0.0,29.19204306602478,0.04673409461975098,0.08193492889404297
54,1117.843752861023,0.0,35.55228114128113,0.043515920639038086,0.07760787010192871
55,1117.9684858322144,0.0,36.535593032836914,0.042697906494140625,0.07749485969543457
56,1118.0975320339203,0.0,39.1259868144989,0.05695700645446777,0.0783681869506836
57,1118.2323441505432,0.0,38.497584104537964,0.04891800880432129,0.07776713371276855
58,1118.3706469535828,0.0,39.61663103103638,0.061170101165771484,0.07707786560058594
59,1118.5013408660889,0.0,27.284879207611084,0.11889505386352539,0.0751338005065918
60,1118.6336739063263,0.0,27.662064790725708,0.11223316192626953,0.07484698295593262
61,1118.766294002533,0.0,28.83900809288025,0.08555269241333008,0.07551431655883789
62,1118.9063639640808,0.0,27.19913077354431,0.08188700675964355,0.07935500144958496
63,1119.0590679645538,0.0,27.270039081573486,0.08471322059631348,0.09051394462585449
64,1119.195559978485,0.0,546.9096391201019,0.11530709266662598,0.08390593528747559
65,1119.3237218856812,0.0,27.696860790252686,0.10396170616149902,0.08066987991333008
66,1119.4544088840485,0.0,31.15913200378418,0.05331897735595703,0.07971405982971191
67,1119.5863418579102,0.0,28.168988943099976,0.033429861068725586,0.07794785499572754
68,1119.7242691516876,0.0,29.378542184829712,0.04425477981567383,0.08098292350769043
69,1119.8616859912872,0.0,30.13350486755371,0.04232192039489746,0.07764506340026855
70,1120.005007982254,0.0,30.114804983139038,0.038787841796875,0.0764007568359375
71,1120.1461818218231,0.0,27.926440954208374,0.0360112190246582,0.07558393478393555
72,1120.2765488624573,0.0,29.19204306602478,0.04673409461975098,0.07508397102355957
73,1120.4114141464233,0.0,35.55228114128113,0.043515920639038086,0.08260202407836914
74,1120.5512771606445,0.0,36.535593032836914,0.042697906494140625,0.08144402503967285
75,1120.6895880699158,0.0,39.1259868144989,0.05695700645446777,0.0800011157989502
76,1120.8209998607635,0.0,38.497584104537964,0.04891800880432129,0.07723093032836914
77,1120.9625327587128,0.0,39.61663103103638,0.061170101165771484,0.0774688720703125
78,1121.097146987915,0.0,27.284879207611084,0.11889505386352539,0.07984566688537598
79,1121.2310440540314,0.0,27.662064790725708,0.11223316192626953,0.07588624954223633
80,1121.3564591407776,0.0,28.83900809288025,0.08555269241333008,0.07606720924377441
81,1121.4913778305054,0.0,27.19913077354431,0.08188700675964355,0.07622408866882324
82,1121.6290261745453,0.0,27.270039081573486,0.08471322059631348,0.0755457878112793
83,1121.7848269939423,0.0,546.9096391201019,0.11530709266662598,0.08833789825439453
84,1121.92107796669,0.0,27.696860790252686,0.10396170616149902,0.08095908164978027
85,1122.0617809295654,0.0,31.15913200378418,0.05331897735595703,0.0828702449798584
86,1122.19482088089,0.0,28.168988943099976,0.033429861068725586,0.07846403121948242
87,1122.3331179618835,0.0,29.378542184829712,0.04425477981567383,0.0831751823425293
88,1122.4611330032349,0.0,30.13350486755371,0.04232192039489746,0.07765793800354004
89,1122.58939909935,0.0,30.114804983139038,0.038787841796875,0.07718300819396973
90,1122.729502916336,0.0,27.926440954208374,0.0360112190246582,0.07864904403686523
91,1122.8610308170319,0.0,29.19204306602478,0.04673409461975098,0.0774080753326416
92,1122.9969940185547,0.0,35.55228114128113,0.043515920639038086,0.07871794700622559
93,1123.1331639289856,0.0,36.535593032836914,0.042697906494140625,0.0798499584197998
94,1123.2715640068054,0.0,39.1259868144989,0.05695700645446777,0.0818791389465332
95,1123.4091441631317,0.0,38.497584104537964,0.04891800880432129,0.07963991165161133
96,1123.5376000404358,0.0,39.61663103103638,0.061170101165771484,0.07710981369018555