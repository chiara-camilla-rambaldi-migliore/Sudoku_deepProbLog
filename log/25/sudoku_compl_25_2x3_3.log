#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,13.047330141067505,4.1662702560424805,12.887678146362305,0.047274112701416016,0.06060433387756348
3,26.295186281204224,3.690920829772949,13.083974838256836,0.04934215545654297,0.06325125694274902
4,39.66105127334595,1.7210394144058228,13.208578824996948,0.047045230865478516,0.0615239143371582
5,52.78753709793091,0.028943480923771858,12.960240125656128,0.048104286193847656,0.058861732482910156
6,65.95726418495178,5.960466182841628e-07,13.060703992843628,0.0482180118560791,0.03575015068054199
7,79.20833110809326,0.0,13.140833139419556,0.05187392234802246,0.03551983833312988
8,92.42961311340332,0.0,13.113111972808838,0.051275014877319336,0.03590106964111328
9,105.50188112258911,0.0,12.989708185195923,0.017806053161621094,0.038720130920410156
10,118.75203108787537,0.0,13.172043085098267,0.017516613006591797,0.03846573829650879
11,131.9127233028412,0.0,13.077864170074463,0.017596960067749023,0.03888511657714844
12,145.00357127189636,0.0,13.010036945343018,0.017733097076416016,0.03832411766052246
13,158.28277611732483,0.0,13.200676918029785,0.0177609920501709,0.03830575942993164
14,171.44521808624268,0.0,13.082885026931763,0.01770496368408203,0.03751397132873535
15,184.4992320537567,0.0,12.972754955291748,0.017612934112548828,0.03780198097229004
16,197.64804816246033,0.0,13.069659948348999,0.0175020694732666,0.03876614570617676
17,210.91049599647522,0.0,13.183974027633667,0.01844191551208496,0.03848004341125488
18,224.04233503341675,0.0,13.053654193878174,0.017822980880737305,0.03843498229980469
19,237.10254001617432,0.0,12.982272863388062,0.017728090286254883,0.03837919235229492
20,250.4098470211029,0.0,13.226796627044678,0.01817607879638672,0.038401126861572266
21,263.58653116226196,0.0,13.094730854034424,0.01786494255065918,0.038526058197021484
22,276.6478509902954,0.0,12.976778030395508,0.01825690269470215,0.03831672668457031
23,289.87950015068054,0.0,13.15178108215332,0.01799798011779785,0.039106130599975586
24,303.0855679512024,0.0,13.123372077941895,0.01819896697998047,0.03891396522521973
25,316.1765761375427,0.0,13.011255979537964,0.018154144287109375,0.03880596160888672
26,329.37390518188477,0.0,13.111425161361694,0.018935203552246094,0.039639949798583984
27,329.43435430526733,0.0,12.887678146362305,0.047274112701416016,0.032032012939453125
28,329.4993631839752,0.0,13.083974838256836,0.04934215545654297,0.03237295150756836
29,329.55942606925964,0.0,13.208578824996948,0.047045230865478516,0.031968116760253906
30,329.6193251609802,0.0,12.960240125656128,0.048104286193847656,0.031542062759399414
31,329.68519711494446,0.0,13.060703992843628,0.0482180118560791,0.03292107582092285
32,329.74575901031494,0.0,13.140833139419556,0.05187392234802246,0.03225517272949219
33,329.81565523147583,0.0,13.113111972808838,0.051275014877319336,0.032256126403808594
34,329.87919902801514,0.0,12.989708185195923,0.017806053161621094,0.03138589859008789
35,329.9428300857544,0.0,13.172043085098267,0.017516613006591797,0.031646013259887695
36,330.0053622722626,0.0,13.077864170074463,0.017596960067749023,0.03263497352600098
37,330.068932056427,0.0,13.010036945343018,0.017733097076416016,0.03178811073303223
38,330.12793016433716,0.0,13.200676918029785,0.0177609920501709,0.0317537784576416
39,330.18770813941956,0.0,13.082885026931763,0.01770496368408203,0.031944990158081055
40,330.24785113334656,0.0,12.972754955291748,0.017612934112548828,0.03152585029602051
41,330.311781167984,0.0,13.069659948348999,0.0175020694732666,0.03175687789916992
42,330.37233304977417,0.0,13.183974027633667,0.01844191551208496,0.03185701370239258
43,330.4398970603943,0.0,13.053654193878174,0.017822980880737305,0.03217720985412598
44,330.5029890537262,0.0,12.982272863388062,0.017728090286254883,0.03183388710021973
45,330.56464099884033,0.0,13.226796627044678,0.01817607879638672,0.03183102607727051
46,330.62515926361084,0.0,13.094730854034424,0.01786494255065918,0.031777143478393555
47,330.68681812286377,0.0,12.976778030395508,0.01825690269470215,0.03208017349243164
48,330.7467713356018,0.0,13.15178108215332,0.01799798011779785,0.03153204917907715
49,330.8121871948242,0.0,13.123372077941895,0.01819896697998047,0.03168082237243652
50,330.8728220462799,0.0,13.011255979537964,0.018154144287109375,0.03166007995605469
51,330.93707513809204,0.0,13.111425161361694,0.018935203552246094,0.03200721740722656
52,330.9955770969391,0.0,12.887678146362305,0.047274112701416016,0.031661033630371094
53,331.06303310394287,0.0,13.083974838256836,0.04934215545654297,0.031864166259765625
54,331.12151408195496,0.0,13.208578824996948,0.047045230865478516,0.031729936599731445
55,331.1817841529846,0.0,12.960240125656128,0.048104286193847656,0.031661033630371094
56,331.2449572086334,0.0,13.060703992843628,0.0482180118560791,0.03160500526428223
57,331.30485701560974,0.0,13.140833139419556,0.05187392234802246,0.032134056091308594
58,331.3658151626587,0.0,13.113111972808838,0.051275014877319336,0.031874895095825195
59,331.42727494239807,0.0,12.989708185195923,0.017806053161621094,0.03210902214050293
60,331.49111700057983,0.0,13.172043085098267,0.017516613006591797,0.031536102294921875
61,331.54950499534607,0.0,13.077864170074463,0.017596960067749023,0.031553030014038086
62,331.6094660758972,0.0,13.010036945343018,0.017733097076416016,0.031649112701416016
63,331.67106103897095,0.0,13.200676918029785,0.0177609920501709,0.0322880744934082
64,331.7309191226959,0.0,13.082885026931763,0.01770496368408203,0.03148484230041504
65,331.7893822193146,0.0,12.972754955291748,0.017612934112548828,0.031215906143188477
66,331.85201716423035,0.0,13.069659948348999,0.0175020694732666,0.03140592575073242
67,331.9146931171417,0.0,13.183974027633667,0.01844191551208496,0.03183484077453613
68,331.9727871417999,0.0,13.053654193878174,0.017822980880737305,0.03159809112548828
69,332.0335810184479,0.0,12.982272863388062,0.017728090286254883,0.03174400329589844
70,332.10002398490906,0.0,13.226796627044678,0.01817607879638672,0.03237509727478027
71,332.1588830947876,0.0,13.094730854034424,0.01786494255065918,0.03178000450134277
72,332.21910309791565,0.0,12.976778030395508,0.01825690269470215,0.03181815147399902
73,332.27947902679443,0.0,13.15178108215332,0.01799798011779785,0.03180193901062012
74,332.3464181423187,0.0,13.123372077941895,0.01819896697998047,0.03174924850463867
75,332.4037790298462,0.0,13.011255979537964,0.018154144287109375,0.031804800033569336
76,332.4656910896301,0.0,13.111425161361694,0.018935203552246094,0.0320429801940918
77,332.52791810035706,0.0,12.887678146362305,0.047274112701416016,0.0318598747253418
78,332.58789229393005,0.0,13.083974838256836,0.04934215545654297,0.03226590156555176
79,332.64680314064026,0.0,13.208578824996948,0.047045230865478516,0.031957149505615234
80,332.709007024765,0.0,12.960240125656128,0.048104286193847656,0.031545162200927734
81,332.77323627471924,0.0,13.060703992843628,0.0482180118560791,0.03192400932312012
82,332.8375880718231,0.0,13.140833139419556,0.05187392234802246,0.03214287757873535
83,332.8990571498871,0.0,13.113111972808838,0.051275014877319336,0.03182196617126465
84,332.963561296463,0.0,12.989708185195923,0.017806053161621094,0.03282809257507324
85,333.02252531051636,0.0,13.172043085098267,0.017516613006591797,0.031967878341674805
86,333.08976912498474,0.0,13.077864170074463,0.017596960067749023,0.03155374526977539
87,333.15429401397705,0.0,13.010036945343018,0.017733097076416016,0.03178071975708008
88,333.21626806259155,0.0,13.200676918029785,0.0177609920501709,0.03206205368041992
89,333.2828731536865,0.0,13.082885026931763,0.01770496368408203,0.032073974609375
90,333.34492897987366,0.0,12.972754955291748,0.017612934112548828,0.03201699256896973
91,333.40354919433594,0.0,13.069659948348999,0.0175020694732666,0.03149700164794922
92,333.46441316604614,0.0,13.183974027633667,0.01844191551208496,0.03159189224243164
93,333.52225399017334,0.0,13.053654193878174,0.017822980880737305,0.03159284591674805
94,333.5853822231293,0.0,12.982272863388062,0.017728090286254883,0.03254389762878418
95,333.64720821380615,0.0,13.226796627044678,0.01817607879638672,0.03173112869262695
96,333.7085270881653,0.0,13.094730854034424,0.01786494255065918,0.03142809867858887
97,333.7683210372925,0.0,12.976778030395508,0.01825690269470215,0.031584739685058594
98,333.83353209495544,0.0,13.15178108215332,0.01799798011779785,0.03153800964355469
99,333.8950660228729,0.0,13.123372077941895,0.01819896697998047,0.03211688995361328
100,333.95422410964966,0.0,13.011255979537964,0.018154144287109375,0.03164982795715332
101,334.0247962474823,0.0,13.111425161361694,0.018935203552246094,0.0318751335144043
102,334.08401107788086,0.0,12.887678146362305,0.047274112701416016,0.03158688545227051
103,334.14292311668396,0.0,13.083974838256836,0.04934215545654297,0.0321347713470459
104,334.2050971984863,0.0,13.208578824996948,0.047045230865478516,0.031677961349487305
105,334.26729226112366,0.0,12.960240125656128,0.048104286193847656,0.03148698806762695
106,334.33312606811523,0.0,13.060703992843628,0.0482180118560791,0.03148984909057617
107,334.39609599113464,0.0,13.140833139419556,0.05187392234802246,0.03214216232299805
108,334.4556579589844,0.0,13.113111972808838,0.051275014877319336,0.03179597854614258
109,334.522812128067,0.0,12.989708185195923,0.017806053161621094,0.03165173530578613
110,334.58547806739807,0.0,13.172043085098267,0.017516613006591797,0.03183913230895996
111,334.6443769931793,0.0,13.077864170074463,0.017596960067749023,0.03164505958557129
112,334.70438027381897,0.0,13.010036945343018,0.017733097076416016,0.032672882080078125
113,334.76332426071167,0.0,13.200676918029785,0.0177609920501709,0.031529903411865234
114,334.83120107650757,0.0,13.082885026931763,0.01770496368408203,0.03190207481384277
115,334.8907001018524,0.0,12.972754955291748,0.017612934112548828,0.031440019607543945
116,334.9543023109436,0.0,13.069659948348999,0.0175020694732666,0.03151369094848633
117,335.02516412734985,0.0,13.183974027633667,0.01844191551208496,0.03198599815368652
118,335.08610105514526,0.0,13.053654193878174,0.017822980880737305,0.03213095664978027
119,335.1493811607361,0.0,12.982272863388062,0.017728090286254883,0.0317690372467041
120,335.21046233177185,0.0,13.226796627044678,0.01817607879638672,0.031423330307006836
121,335.2712230682373,0.0,13.094730854034424,0.01786494255065918,0.031542062759399414
122,335.33337593078613,0.0,12.976778030395508,0.01825690269470215,0.03144383430480957
123,335.3942360877991,0.0,13.15178108215332,0.01799798011779785,0.03184318542480469
124,335.4570691585541,0.0,13.123372077941895,0.01819896697998047,0.031785011291503906
125,335.51740407943726,0.0,13.011255979537964,0.018154144287109375,0.03148174285888672
126,335.574912071228,0.0,13.111425161361694,0.018935203552246094,0.03196907043457031