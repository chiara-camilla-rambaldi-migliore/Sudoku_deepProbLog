#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,13.08324408531189,4.174129486083984,12.92664885520935,0.04553508758544922,0.06293678283691406
3,26.34609317779541,3.733159065246582,13.103335857391357,0.04499411582946777,0.062007904052734375
4,39.54270315170288,1.8870835304260254,13.035939931869507,0.04499316215515137,0.06318902969360352
5,52.870166063308716,0.05064520612359047,13.173610925674438,0.04452991485595703,0.06250476837158203
6,66.04566097259521,1.3113030945532955e-06,13.066969156265259,0.04511737823486328,0.035459041595458984
7,79.11931109428406,0.0,12.97049880027771,0.045702219009399414,0.03588676452636719
8,92.3971471786499,0.0,13.172745943069458,0.04645800590515137,0.03393816947937012
9,105.56638407707214,0.0,13.087458848953247,0.01787400245666504,0.0387728214263916
10,118.65323209762573,0.0,13.008100986480713,0.01802802085876465,0.03730273246765137
11,131.81937408447266,0.0,13.087255001068115,0.017869949340820312,0.038996219635009766
12,145.1473400592804,0.0,13.25057601928711,0.01745915412902832,0.03877902030944824
13,158.23987889289856,0.0,13.01093602180481,0.01745295524597168,0.0375521183013916
14,171.38238787651062,0.0,13.05754280090332,0.01764702796936035,0.03865337371826172
15,184.63895201683044,0.0,13.17653203010559,0.018042802810668945,0.03819608688354492
16,197.78314208984375,0.0,13.06417202949524,0.017939090728759766,0.038880109786987305
17,210.91190814971924,0.0,13.043307065963745,0.01822209358215332,0.03893709182739258
18,224.05536103248596,0.0,13.064856052398682,0.018181800842285156,0.03887367248535156
19,237.2482192516327,0.0,13.111007928848267,0.01773381233215332,0.03775906562805176
20,250.55407094955444,0.0,13.228123188018799,0.017886877059936523,0.038805246353149414
21,263.611398935318,0.0,12.975335121154785,0.01792120933532715,0.03886008262634277
22,276.81315994262695,0.0,13.115509033203125,0.018464088439941406,0.039157867431640625
23,290.0512261390686,0.0,13.153901100158691,0.01898980140686035,0.040693044662475586
24,303.33186507225037,0.0,13.185182332992554,0.025347232818603516,0.04017996788024902
25,316.41008615493774,0.0,12.990396976470947,0.020837783813476562,0.03902578353881836
26,329.64473509788513,0.0,13.147856950759888,0.02468395233154297,0.0388188362121582
27,329.71061086654663,0.0,12.92664885520935,0.04553508758544922,0.03213906288146973
28,329.7728190422058,0.0,13.103335857391357,0.04499411582946777,0.032514095306396484
29,329.8360528945923,0.0,13.035939931869507,0.04499316215515137,0.0319828987121582
30,329.8973000049591,0.0,13.173610925674438,0.04452991485595703,0.031662940979003906
31,329.96234703063965,0.0,13.066969156265259,0.04511737823486328,0.0318911075592041
32,330.0237638950348,0.0,12.97049880027771,0.045702219009399414,0.03192710876464844
33,330.0840802192688,0.0,13.172745943069458,0.04645800590515137,0.031664133071899414
34,330.14334511756897,0.0,13.087458848953247,0.01787400245666504,0.0315248966217041
35,330.2048189640045,0.0,13.008100986480713,0.01802802085876465,0.03195500373840332
36,330.26763105392456,0.0,13.087255001068115,0.017869949340820312,0.032121896743774414
37,330.32759189605713,0.0,13.25057601928711,0.01745915412902832,0.03170013427734375
38,330.39454793930054,0.0,13.01093602180481,0.01745295524597168,0.03235888481140137
39,330.4564731121063,0.0,13.05754280090332,0.01764702796936035,0.031588077545166016
40,330.5159890651703,0.0,13.17653203010559,0.018042802810668945,0.03166699409484863
41,330.5787980556488,0.0,13.06417202949524,0.017939090728759766,0.031807899475097656
42,330.63998103141785,0.0,13.043307065963745,0.01822209358215332,0.031989097595214844
43,330.7019829750061,0.0,13.064856052398682,0.018181800842285156,0.032438039779663086
44,330.76289415359497,0.0,13.111007928848267,0.01773381233215332,0.031909942626953125
45,330.8197240829468,0.0,13.228123188018799,0.017886877059936523,0.031584978103637695
46,330.88180804252625,0.0,12.975335121154785,0.01792120933532715,0.03166985511779785
47,330.9403431415558,0.0,13.115509033203125,0.018464088439941406,0.03161787986755371
48,331.00251388549805,0.0,13.153901100158691,0.01898980140686035,0.03243088722229004
49,331.06385612487793,0.0,13.185182332992554,0.025347232818603516,0.03161907196044922
50,331.12612199783325,0.0,12.990396976470947,0.020837783813476562,0.03217792510986328
51,331.19041204452515,0.0,13.147856950759888,0.02468395233154297,0.03178119659423828
52,331.25205993652344,0.0,12.92664885520935,0.04553508758544922,0.031491994857788086
53,331.3170602321625,0.0,13.103335857391357,0.04499411582946777,0.031155824661254883
54,331.3747351169586,0.0,13.035939931869507,0.04499316215515137,0.031640052795410156
55,331.43487000465393,0.0,13.173610925674438,0.04452991485595703,0.031662940979003906
56,331.49612498283386,0.0,13.066969156265259,0.04511737823486328,0.03185391426086426
57,331.5563759803772,0.0,12.97049880027771,0.045702219009399414,0.031481027603149414
58,331.62191104888916,0.0,13.172745943069458,0.04645800590515137,0.031526803970336914
59,331.68146800994873,0.0,13.087458848953247,0.01787400245666504,0.031479835510253906
60,331.74104404449463,0.0,13.008100986480713,0.01802802085876465,0.03183174133300781
61,331.8013150691986,0.0,13.087255001068115,0.017869949340820312,0.03188920021057129
62,331.8605329990387,0.0,13.25057601928711,0.01745915412902832,0.031942129135131836
63,331.9194350242615,0.0,13.01093602180481,0.01745295524597168,0.0316622257232666
64,331.9887731075287,0.0,13.05754280090332,0.01764702796936035,0.03148913383483887
65,332.05325412750244,0.0,13.17653203010559,0.018042802810668945,0.03162121772766113
66,332.11597323417664,0.0,13.06417202949524,0.017939090728759766,0.0319671630859375
67,332.17661118507385,0.0,13.043307065963745,0.01822209358215332,0.03155183792114258
68,332.2343008518219,0.0,13.064856052398682,0.018181800842285156,0.03180384635925293
69,332.29617619514465,0.0,13.111007928848267,0.01773381233215332,0.03144097328186035
70,332.3548002243042,0.0,13.228123188018799,0.017886877059936523,0.031758785247802734
71,332.4154119491577,0.0,12.975335121154785,0.01792120933532715,0.03160595893859863
72,332.47515296936035,0.0,13.115509033203125,0.018464088439941406,0.031426191329956055
73,332.53571820259094,0.0,13.153901100158691,0.01898980140686035,0.03164076805114746
74,332.59710907936096,0.0,13.185182332992554,0.025347232818603516,0.03147482872009277
75,332.6556191444397,0.0,12.990396976470947,0.020837783813476562,0.03203725814819336
76,332.71563601493835,0.0,13.147856950759888,0.02468395233154297,0.03193187713623047
77,332.77623081207275,0.0,12.92664885520935,0.04553508758544922,0.031858205795288086
78,332.835401058197,0.0,13.103335857391357,0.04499411582946777,0.03159284591674805
79,332.89771008491516,0.0,13.035939931869507,0.04499316215515137,0.031826019287109375
80,332.95783710479736,0.0,13.173610925674438,0.04452991485595703,0.03188300132751465
81,333.0163700580597,0.0,13.066969156265259,0.04511737823486328,0.03165388107299805
82,333.081414937973,0.0,12.97049880027771,0.045702219009399414,0.03187680244445801
83,333.14267802238464,0.0,13.172745943069458,0.04645800590515137,0.0316617488861084
84,333.2105190753937,0.0,13.087458848953247,0.01787400245666504,0.03249621391296387
85,333.2703900337219,0.0,13.008100986480713,0.01802802085876465,0.03163409233093262
86,333.3327338695526,0.0,13.087255001068115,0.017869949340820312,0.031693220138549805
87,333.3927900791168,0.0,13.25057601928711,0.01745915412902832,0.031622886657714844
88,333.4510588645935,0.0,13.01093602180481,0.01745295524597168,0.03167581558227539
89,333.51166796684265,0.0,13.05754280090332,0.01764702796936035,0.03167104721069336
90,333.57086205482483,0.0,13.17653203010559,0.018042802810668945,0.03172111511230469
91,333.6349129676819,0.0,13.06417202949524,0.017939090728759766,0.03151369094848633
92,333.69842624664307,0.0,13.043307065963745,0.01822209358215332,0.03171682357788086
93,333.7563331127167,0.0,13.064856052398682,0.018181800842285156,0.03154110908508301
94,333.81727409362793,0.0,13.111007928848267,0.01773381233215332,0.031385183334350586
95,333.8809652328491,0.0,13.228123188018799,0.017886877059936523,0.03285789489746094
96,333.9391770362854,0.0,12.975335121154785,0.01792120933532715,0.03158879280090332
97,333.9989550113678,0.0,13.115509033203125,0.018464088439941406,0.031563758850097656
98,334.0592739582062,0.0,13.153901100158691,0.01898980140686035,0.0325620174407959
99,334.1180679798126,0.0,13.185182332992554,0.025347232818603516,0.03160405158996582
100,334.17903685569763,0.0,12.990396976470947,0.020837783813476562,0.03127408027648926
101,334.2423532009125,0.0,13.147856950759888,0.02468395233154297,0.03197193145751953
102,334.30732107162476,0.0,12.92664885520935,0.04553508758544922,0.03157806396484375
103,334.366996049881,0.0,13.103335857391357,0.04499411582946777,0.03183102607727051
104,334.42733907699585,0.0,13.035939931869507,0.04499316215515137,0.03124094009399414
105,334.4843399524689,0.0,13.173610925674438,0.04452991485595703,0.03164505958557129
106,334.5480959415436,0.0,13.066969156265259,0.04511737823486328,0.03152275085449219
107,334.61240005493164,0.0,12.97049880027771,0.045702219009399414,0.03219318389892578
108,334.6717200279236,0.0,13.172745943069458,0.04645800590515137,0.03171801567077637
109,334.733017206192,0.0,13.087458848953247,0.01787400245666504,0.03168797492980957
110,334.79316210746765,0.0,13.008100986480713,0.01802802085876465,0.03178691864013672
111,334.85749197006226,0.0,13.087255001068115,0.017869949340820312,0.03124403953552246
112,334.9187572002411,0.0,13.25057601928711,0.01745915412902832,0.03181910514831543
113,334.97883105278015,0.0,13.01093602180481,0.01745295524597168,0.031419992446899414
114,335.03784799575806,0.0,13.05754280090332,0.01764702796936035,0.03149008750915527
115,335.0985851287842,0.0,13.17653203010559,0.018042802810668945,0.032028913497924805
116,335.15793895721436,0.0,13.06417202949524,0.017939090728759766,0.031190156936645508
117,335.2167921066284,0.0,13.043307065963745,0.01822209358215332,0.031626224517822266
118,335.2778260707855,0.0,13.064856052398682,0.018181800842285156,0.03178215026855469
119,335.33580708503723,0.0,13.111007928848267,0.01773381233215332,0.03149580955505371
120,335.3941481113434,0.0,13.228123188018799,0.017886877059936523,0.03157329559326172
121,335.45499300956726,0.0,12.975335121154785,0.01792120933532715,0.03154110908508301
122,335.5142390727997,0.0,13.115509033203125,0.018464088439941406,0.03170609474182129
123,335.5722839832306,0.0,13.153901100158691,0.01898980140686035,0.0324862003326416
124,335.6369569301605,0.0,13.185182332992554,0.025347232818603516,0.03153491020202637
125,335.70567083358765,0.0,12.990396976470947,0.020837783813476562,0.032752275466918945
126,335.7673170566559,0.0,13.147856950759888,0.02468395233154297,0.03179597854614258