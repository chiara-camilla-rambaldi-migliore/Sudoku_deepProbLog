#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,14.190966129302979,4.252333641052246,13.97095799446106,0.08995199203491211,0.06366419792175293
3,28.753666877746582,3.626614809036255,14.34971809387207,0.08041214942932129,0.06260490417480469
4,43.12266206741333,1.4475672245025635,14.157878160476685,0.07982897758483887,0.06419181823730469
5,57.841110944747925,0.011618314310908318,14.496191263198853,0.07319998741149902,0.06403684616088867
6,71.85945296287537,2.3841860752327193e-07,13.890671253204346,0.05392813682556152,0.03961014747619629
7,85.95169711112976,0.0,13.968762874603271,0.057082176208496094,0.03584003448486328
8,100.03923487663269,0.0,13.961609840393066,0.06279611587524414,0.03621697425842285
9,114.59974408149719,0.0,14.46034574508667,0.021732091903686523,0.039368391036987305
10,128.76721596717834,0.0,14.060815811157227,0.01977229118347168,0.03984189033508301
11,142.90765810012817,0.0,14.044305086135864,0.021613121032714844,0.038923025131225586
12,157.13860702514648,0.0,14.136936902999878,0.022104978561401367,0.03961992263793945
13,171.31786704063416,0.0,14.094321012496948,0.01919388771057129,0.04004788398742676
14,185.62032794952393,0.0,14.209614992141724,0.02303791046142578,0.03945183753967285
15,199.66345620155334,0.0,13.942009210586548,0.022679805755615234,0.04108738899230957
16,214.0042278766632,0.0,14.254122018814087,0.01972484588623047,0.04021096229553223
17,228.73820304870605,0.0,14.634423017501831,0.024533987045288086,0.03982686996459961
18,242.78892493247986,0.0,13.957748889923096,0.01994800567626953,0.03975796699523926
19,257.01306986808777,0.0,14.123347997665405,0.023406028747558594,0.04098701477050781
20,271.6818289756775,0.0,14.570796012878418,0.025958776473999023,0.03883790969848633
21,286.2233679294586,0.0,14.4356107711792,0.02810978889465332,0.040891170501708984
22,300.2945749759674,0.0,13.969613075256348,0.025478839874267578,0.04136395454406738
23,314.41965198516846,0.0,14.02456021308899,0.022191286087036133,0.041166067123413086
24,328.8762230873108,0.0,14.360140085220337,0.019210100173950195,0.041313886642456055
25,328.9386179447174,0.0,13.97095799446106,0.08995199203491211,0.03294992446899414
26,329.0055809020996,0.0,14.34971809387207,0.08041214942932129,0.033860206604003906
27,329.0756208896637,0.0,14.157878160476685,0.07982897758483887,0.03535795211791992
28,329.1402258872986,0.0,14.496191263198853,0.07319998741149902,0.03276419639587402
29,329.2005488872528,0.0,13.890671253204346,0.05392813682556152,0.031999826431274414
30,329.262727022171,0.0,13.968762874603271,0.057082176208496094,0.03313279151916504
31,329.33491015434265,0.0,13.961609840393066,0.06279611587524414,0.03461194038391113
32,329.3945450782776,0.0,14.46034574508667,0.021732091903686523,0.03252077102661133
33,329.4549961090088,0.0,14.060815811157227,0.01977229118347168,0.031897783279418945
34,329.51660799980164,0.0,14.044305086135864,0.021613121032714844,0.03207802772521973
35,329.57776713371277,0.0,14.136936902999878,0.022104978561401367,0.03259086608886719
36,329.6412811279297,0.0,14.094321012496948,0.01919388771057129,0.033535003662109375
37,329.7050280570984,0.0,14.209614992141724,0.02303791046142578,0.03435015678405762
38,329.7644839286804,0.0,13.942009210586548,0.022679805755615234,0.03187704086303711
39,329.8268051147461,0.0,14.254122018814087,0.01972484588623047,0.03184056282043457
40,329.89069390296936,0.0,14.634423017501831,0.024533987045288086,0.03171586990356445
41,329.9561650753021,0.0,13.957748889923096,0.01994800567626953,0.03323006629943848
42,330.02178597450256,0.0,14.123347997665405,0.023406028747558594,0.032644033432006836
43,330.09316420555115,0.0,14.570796012878418,0.025958776473999023,0.032512664794921875
44,330.15598797798157,0.0,14.4356107711792,0.02810978889465332,0.03284406661987305
45,330.22575402259827,0.0,13.969613075256348,0.025478839874267578,0.032646894454956055
46,330.28680515289307,0.0,14.02456021308899,0.022191286087036133,0.034661293029785156
47,330.3524739742279,0.0,14.360140085220337,0.019210100173950195,0.03520703315734863
48,330.4204959869385,0.0,13.97095799446106,0.08995199203491211,0.033306121826171875
49,330.48326301574707,0.0,14.34971809387207,0.08041214942932129,0.033143043518066406
50,330.5441401004791,0.0,14.157878160476685,0.07982897758483887,0.032373905181884766
51,330.6113910675049,0.0,14.496191263198853,0.07319998741149902,0.03327584266662598
52,330.6752359867096,0.0,13.890671253204346,0.05392813682556152,0.03296804428100586
53,330.7338252067566,0.0,13.968762874603271,0.057082176208496094,0.031889915466308594
54,330.7938959598541,0.0,13.961609840393066,0.06279611587524414,0.032569169998168945
55,330.85743403434753,0.0,14.46034574508667,0.021732091903686523,0.03218817710876465
56,330.92546701431274,0.0,14.060815811157227,0.01977229118347168,0.03268694877624512
57,330.98913502693176,0.0,14.044305086135864,0.021613121032714844,0.03362393379211426
58,331.0587000846863,0.0,14.136936902999878,0.022104978561401367,0.03543400764465332
59,331.12279415130615,0.0,14.094321012496948,0.01919388771057129,0.03212904930114746
60,331.18773198127747,0.0,14.209614992141724,0.02303791046142578,0.032785892486572266
61,331.24801898002625,0.0,13.942009210586548,0.022679805755615234,0.0317537784576416
62,331.3099219799042,0.0,14.254122018814087,0.01972484588623047,0.03219890594482422
63,331.3741829395294,0.0,14.634423017501831,0.024533987045288086,0.03191828727722168
64,331.43708395957947,0.0,13.957748889923096,0.01994800567626953,0.032524824142456055
65,331.50356101989746,0.0,14.123347997665405,0.023406028747558594,0.032212018966674805
66,331.57231187820435,0.0,14.570796012878418,0.025958776473999023,0.035855770111083984
67,331.6352698802948,0.0,14.4356107711792,0.02810978889465332,0.0347442626953125
68,331.69838094711304,0.0,13.969613075256348,0.025478839874267578,0.03513979911804199
69,331.7663588523865,0.0,14.02456021308899,0.022191286087036133,0.035041093826293945
70,331.8281319141388,0.0,14.360140085220337,0.019210100173950195,0.03339886665344238
71,331.89540910720825,0.0,13.97095799446106,0.08995199203491211,0.035114288330078125
72,331.9618179798126,0.0,14.34971809387207,0.08041214942932129,0.03209805488586426
73,332.0288269519806,0.0,14.157878160476685,0.07982897758483887,0.03467416763305664
74,332.09036922454834,0.0,14.496191263198853,0.07319998741149902,0.03504800796508789
75,332.15407490730286,0.0,13.890671253204346,0.05392813682556152,0.0326540470123291
76,332.2237751483917,0.0,13.968762874603271,0.057082176208496094,0.03578019142150879
77,332.287544965744,0.0,13.961609840393066,0.06279611587524414,0.036035776138305664
78,332.3505051136017,0.0,14.46034574508667,0.021732091903686523,0.03302597999572754
79,332.41518902778625,0.0,14.060815811157227,0.01977229118347168,0.03254866600036621
80,332.4805209636688,0.0,14.044305086135864,0.021613121032714844,0.03262782096862793
81,332.5412051677704,0.0,14.136936902999878,0.022104978561401367,0.03244376182556152
82,332.60246682167053,0.0,14.094321012496948,0.01919388771057129,0.03225111961364746
83,332.6683690547943,0.0,14.209614992141724,0.02303791046142578,0.031900882720947266
84,332.7300708293915,0.0,13.942009210586548,0.022679805755615234,0.03298616409301758
85,332.7924509048462,0.0,14.254122018814087,0.01972484588623047,0.03367185592651367
86,332.85699701309204,0.0,14.634423017501831,0.024533987045288086,0.033059120178222656
87,332.9267499446869,0.0,13.957748889923096,0.01994800567626953,0.03373908996582031
88,332.990079164505,0.0,14.123347997665405,0.023406028747558594,0.03210115432739258
89,333.05156421661377,0.0,14.570796012878418,0.025958776473999023,0.03174996376037598
90,333.11353611946106,0.0,14.4356107711792,0.02810978889465332,0.03311276435852051
91,333.1806209087372,0.0,13.969613075256348,0.025478839874267578,0.03394603729248047
92,333.2447340488434,0.0,14.02456021308899,0.022191286087036133,0.034628868103027344
93,333.3029000759125,0.0,14.360140085220337,0.019210100173950195,0.03183889389038086
94,333.3662648200989,0.0,13.97095799446106,0.08995199203491211,0.03417396545410156
95,333.43143701553345,0.0,14.34971809387207,0.08041214942932129,0.03234577178955078
96,333.4955680370331,0.0,14.157878160476685,0.07982897758483887,0.03335213661193848
97,333.5571150779724,0.0,14.496191263198853,0.07319998741149902,0.0323028564453125
98,333.62018299102783,0.0,13.890671253204346,0.05392813682556152,0.03212308883666992
99,333.682669878006,0.0,13.968762874603271,0.057082176208496094,0.031848907470703125
100,333.74393105506897,0.0,13.961609840393066,0.06279611587524414,0.03435206413269043
101,333.80734181404114,0.0,14.46034574508667,0.021732091903686523,0.03597211837768555
102,333.87260389328003,0.0,14.060815811157227,0.01977229118347168,0.036398887634277344
103,333.94158911705017,0.0,14.044305086135864,0.021613121032714844,0.03545117378234863
104,334.00820112228394,0.0,14.136936902999878,0.022104978561401367,0.03477287292480469
105,334.0707538127899,0.0,14.094321012496948,0.01919388771057129,0.033247947692871094
106,334.1347460746765,0.0,14.209614992141724,0.02303791046142578,0.0322270393371582
107,334.1990668773651,0.0,13.942009210586548,0.022679805755615234,0.03252696990966797
108,334.27025294303894,0.0,14.254122018814087,0.01972484588623047,0.033206939697265625
109,334.32954812049866,0.0,14.634423017501831,0.024533987045288086,0.03257322311401367
110,334.39319682121277,0.0,13.957748889923096,0.01994800567626953,0.03263282775878906
111,334.4583308696747,0.0,14.123347997665405,0.023406028747558594,0.033557891845703125
112,334.5247571468353,0.0,14.570796012878418,0.025958776473999023,0.03270316123962402
113,334.592581987381,0.0,14.4356107711792,0.02810978889465332,0.03340601921081543
114,334.67040610313416,0.0,13.969613075256348,0.025478839874267578,0.03476309776306152
115,334.7501049041748,0.0,14.02456021308899,0.022191286087036133,0.03392171859741211
116,334.8132309913635,0.0,14.360140085220337,0.019210100173950195,0.0330350399017334