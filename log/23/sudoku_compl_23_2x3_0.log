#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,16.526714086532593,4.154713153839111,16.28549885749817,0.08224606513977051,0.0829620361328125
3,33.44456911087036,3.7926366329193115,16.685992002487183,0.08204197883605957,0.07854628562927246
4,50.0707061290741,2.5637710094451904,16.393107891082764,0.09464502334594727,0.07439899444580078
5,66.84435510635376,0.160870760679245,16.506648063659668,0.10460996627807617,0.07510495185852051
6,83.50805616378784,2.229238634754438e-05,16.471508979797363,0.09045791625976562,0.04870891571044922
7,100.06426692008972,0.0,16.3941969871521,0.08321118354797363,0.039798736572265625
8,116.62613821029663,0.0,16.39635992050171,0.08050394058227539,0.04352998733520508
9,132.87736701965332,0.0,16.137716054916382,0.022389888763427734,0.04977679252624512
10,149.78170204162598,0.0,16.785770893096924,0.027734994888305664,0.046900033950805664
11,166.32758116722107,0.0,16.4318368434906,0.02621293067932129,0.04393196105957031
12,183.123300075531,0.0,16.688671827316284,0.021486997604370117,0.04605889320373535
13,199.9937710762024,0.0,16.76078176498413,0.022043228149414062,0.04632902145385742
14,217.11659812927246,0.0,17.00901699066162,0.02206110954284668,0.047122955322265625
15,234.38367104530334,0.0,17.154980182647705,0.022207975387573242,0.046682119369506836
16,251.49128818511963,0.0,16.99427604675293,0.0253298282623291,0.04626584053039551
17,268.47728729248047,0.0,16.88334321975708,0.02170395851135254,0.044328927993774414
18,284.89328503608704,0.0,16.304485082626343,0.024019956588745117,0.046907901763916016
19,301.96227622032166,0.0,16.95131015777588,0.022489070892333984,0.04545402526855469
20,318.8127660751343,0.0,16.72149896621704,0.02799224853515625,0.047624826431274414
21,336.2436351776123,0.0,17.316170930862427,0.023005247116088867,0.046479225158691406
22,353.59424209594727,0.0,17.23092293739319,0.026852846145629883,0.043714046478271484
23,371.2071511745453,0.0,17.49587893486023,0.023700952529907227,0.046125173568725586
24,388.2000660896301,0.0,16.885097980499268,0.02306985855102539,0.04687023162841797
25,388.283420085907,0.0,16.28549885749817,0.08224606513977051,0.03909707069396973
26,388.3696188926697,0.0,16.685992002487183,0.08204197883605957,0.03979802131652832
27,388.4606120586395,0.0,16.393107891082764,0.09464502334594727,0.0380549430847168
28,388.5450003147125,0.0,16.506648063659668,0.10460996627807617,0.037053823471069336
29,388.63340997695923,0.0,16.471508979797363,0.09045791625976562,0.03826189041137695
30,388.7131190299988,0.0,16.3941969871521,0.08321118354797363,0.03822898864746094
31,388.8026030063629,0.0,16.39635992050171,0.08050394058227539,0.038645029067993164
32,388.8858790397644,0.0,16.137716054916382,0.022389888763427734,0.038062095642089844
33,388.96763014793396,0.0,16.785770893096924,0.027734994888305664,0.03796720504760742
34,389.0542860031128,0.0,16.4318368434906,0.02621293067932129,0.03718209266662598
35,389.1345520019531,0.0,16.688671827316284,0.021486997604370117,0.037689924240112305
36,389.21468210220337,0.0,16.76078176498413,0.022043228149414062,0.03669929504394531
37,389.3032991886139,0.0,17.00901699066162,0.02206110954284668,0.038125038146972656
38,389.3841619491577,0.0,17.154980182647705,0.022207975387573242,0.03828787803649902
39,389.46368503570557,0.0,16.99427604675293,0.0253298282623291,0.03801393508911133
40,389.5459089279175,0.0,16.88334321975708,0.02170395851135254,0.03624296188354492
41,389.6279091835022,0.0,16.304485082626343,0.024019956588745117,0.037867069244384766
42,389.71364092826843,0.0,16.95131015777588,0.022489070892333984,0.03762197494506836
43,389.78721809387207,0.0,16.72149896621704,0.02799224853515625,0.037146806716918945
44,389.8721830844879,0.0,17.316170930862427,0.023005247116088867,0.037220001220703125
45,389.9582591056824,0.0,17.23092293739319,0.026852846145629883,0.03772997856140137
46,390.0430209636688,0.0,17.49587893486023,0.023700952529907227,0.03814196586608887
47,390.12702798843384,0.0,16.885097980499268,0.02306985855102539,0.03770899772644043
48,390.2087731361389,0.0,16.28549885749817,0.08224606513977051,0.036789894104003906
49,390.28748512268066,0.0,16.685992002487183,0.08204197883605957,0.03809213638305664
50,390.3603630065918,0.0,16.393107891082764,0.09464502334594727,0.03697681427001953
51,390.4450740814209,0.0,16.506648063659668,0.10460996627807617,0.03797793388366699
52,390.5365381240845,0.0,16.471508979797363,0.09045791625976562,0.037818193435668945
53,390.6177599430084,0.0,16.3941969871521,0.08321118354797363,0.03771686553955078
54,390.70650601387024,0.0,16.39635992050171,0.08050394058227539,0.03812909126281738
55,390.7941300868988,0.0,16.137716054916382,0.022389888763427734,0.0383000373840332
56,390.87765312194824,0.0,16.785770893096924,0.027734994888305664,0.03734993934631348
57,390.9557979106903,0.0,16.4318368434906,0.02621293067932129,0.037532806396484375
58,391.0396411418915,0.0,16.688671827316284,0.021486997604370117,0.038954973220825195
59,391.1195421218872,0.0,16.76078176498413,0.022043228149414062,0.037590742111206055
60,391.2022020816803,0.0,17.00901699066162,0.02206110954284668,0.03702235221862793
61,391.29206013679504,0.0,17.154980182647705,0.022207975387573242,0.03908181190490723
62,391.36863803863525,0.0,16.99427604675293,0.0253298282623291,0.0372319221496582
63,391.44362020492554,0.0,16.88334321975708,0.02170395851135254,0.03648781776428223
64,391.5237250328064,0.0,16.304485082626343,0.024019956588745117,0.03743600845336914
65,391.60713815689087,0.0,16.95131015777588,0.022489070892333984,0.036943912506103516
66,391.6962659358978,0.0,16.72149896621704,0.02799224853515625,0.03745770454406738
67,391.7754201889038,0.0,17.316170930862427,0.023005247116088867,0.03776884078979492
68,391.86070799827576,0.0,17.23092293739319,0.026852846145629883,0.03814506530761719
69,391.9375522136688,0.0,17.49587893486023,0.023700952529907227,0.03760504722595215
70,392.0238080024719,0.0,16.885097980499268,0.02306985855102539,0.03766131401062012
71,392.10876202583313,0.0,16.28549885749817,0.08224606513977051,0.03902721405029297
72,392.18831729888916,0.0,16.685992002487183,0.08204197883605957,0.038137197494506836
73,392.2744371891022,0.0,16.393107891082764,0.09464502334594727,0.038102149963378906
74,392.3568539619446,0.0,16.506648063659668,0.10460996627807617,0.03960609436035156
75,392.4303979873657,0.0,16.471508979797363,0.09045791625976562,0.03751111030578613
76,392.51723313331604,0.0,16.3941969871521,0.08321118354797363,0.036699771881103516
77,392.609658241272,0.0,16.39635992050171,0.08050394058227539,0.03749990463256836
78,392.6878960132599,0.0,16.137716054916382,0.022389888763427734,0.03774380683898926
79,392.77004528045654,0.0,16.785770893096924,0.027734994888305664,0.03654813766479492
80,392.8499162197113,0.0,16.4318368434906,0.02621293067932129,0.03804492950439453
81,392.9298858642578,0.0,16.688671827316284,0.021486997604370117,0.03575706481933594
82,393.00980710983276,0.0,16.76078176498413,0.022043228149414062,0.03654599189758301
83,393.0920510292053,0.0,17.00901699066162,0.02206110954284668,0.037809133529663086
84,393.1709740161896,0.0,17.154980182647705,0.022207975387573242,0.03774595260620117
85,393.25316309928894,0.0,16.99427604675293,0.0253298282623291,0.037261009216308594
86,393.32483410835266,0.0,16.88334321975708,0.02170395851135254,0.03763699531555176
87,393.40650606155396,0.0,16.304485082626343,0.024019956588745117,0.037982940673828125
88,393.4865560531616,0.0,16.95131015777588,0.022489070892333984,0.03792524337768555
89,393.56918716430664,0.0,16.72149896621704,0.02799224853515625,0.03741192817687988
90,393.64586329460144,0.0,17.316170930862427,0.023005247116088867,0.03611016273498535
91,393.72879910469055,0.0,17.23092293739319,0.026852846145629883,0.03719925880432129
92,393.81602001190186,0.0,17.49587893486023,0.023700952529907227,0.03818392753601074
93,393.8998851776123,0.0,16.885097980499268,0.02306985855102539,0.03792405128479004
94,393.9886791706085,0.0,16.28549885749817,0.08224606513977051,0.03722429275512695
95,394.06985211372375,0.0,16.685992002487183,0.08204197883605957,0.03781771659851074
96,394.15452790260315,0.0,16.393107891082764,0.09464502334594727,0.0388798713684082
97,394.2314889431,0.0,16.506648063659668,0.10460996627807617,0.03813886642456055
98,394.31501507759094,0.0,16.471508979797363,0.09045791625976562,0.037668704986572266
99,394.39666509628296,0.0,16.3941969871521,0.08321118354797363,0.03832507133483887
100,394.4797110557556,0.0,16.39635992050171,0.08050394058227539,0.03650999069213867
101,394.5596139431,0.0,16.137716054916382,0.022389888763427734,0.03708481788635254
102,394.64062786102295,0.0,16.785770893096924,0.027734994888305664,0.03787589073181152
103,394.71511220932007,0.0,16.4318368434906,0.02621293067932129,0.03746318817138672
104,394.7921380996704,0.0,16.688671827316284,0.021486997604370117,0.03606128692626953
105,394.8698899745941,0.0,16.76078176498413,0.022043228149414062,0.037712812423706055
106,394.9527659416199,0.0,17.00901699066162,0.02206110954284668,0.03792095184326172
107,395.0291519165039,0.0,17.154980182647705,0.022207975387573242,0.03777003288269043
108,395.11089420318604,0.0,16.99427604675293,0.0253298282623291,0.036866188049316406
109,395.19501519203186,0.0,16.88334321975708,0.02170395851135254,0.03682279586791992
110,395.2807340621948,0.0,16.304485082626343,0.024019956588745117,0.03679990768432617
111,395.3648979663849,0.0,16.95131015777588,0.022489070892333984,0.037184953689575195
112,395.45015597343445,0.0,16.72149896621704,0.02799224853515625,0.038056373596191406
113,395.5275230407715,0.0,17.316170930862427,0.023005247116088867,0.03914809226989746
114,395.6082580089569,0.0,17.23092293739319,0.026852846145629883,0.038233041763305664
115,395.69255018234253,0.0,17.49587893486023,0.023700952529907227,0.03967785835266113
116,395.7796971797943,0.0,16.885097980499268,0.02306985855102539,0.03865385055541992