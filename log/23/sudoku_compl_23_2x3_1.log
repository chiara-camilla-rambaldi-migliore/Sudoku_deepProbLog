#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,15.026585817337036,4.218498229980469,14.833635091781616,0.05421590805053711,0.06433916091918945
3,29.860744953155518,3.7988805770874023,14.652632713317871,0.04960894584655762,0.06590008735656738
4,44.48197674751282,2.1044161319732666,14.434834241867065,0.05187416076660156,0.06814932823181152
5,59.10566473007202,0.07656414806842804,14.44191288948059,0.05200600624084473,0.06494617462158203
6,73.61219382286072,1.1920935776288388e-06,14.383614778518677,0.05340909957885742,0.0377039909362793
7,88.17371702194214,0.0,14.428982019424438,0.05594801902770996,0.03754091262817383
8,102.93818283081055,0.0,14.633114099502563,0.06006979942321777,0.03811359405517578
9,117.78358387947083,0.0,14.734619855880737,0.024211883544921875,0.04706525802612305
10,132.65517807006836,0.0,14.771543025970459,0.02060699462890625,0.04285693168640137
11,147.24818587303162,0.0,14.49685001373291,0.018761873245239258,0.04074692726135254
12,161.97519183158875,0.0,14.636382102966309,0.01962113380432129,0.041542768478393555
13,176.717955827713,0.0,14.6562340259552,0.020127296447753906,0.039482831954956055
14,190.95652103424072,0.0,14.148974895477295,0.0194399356842041,0.04010319709777832
15,204.9403419494629,0.0,13.867480754852295,0.034219980239868164,0.04072976112365723
16,219.70796179771423,0.0,14.67985200881958,0.018423795700073242,0.03958487510681152
17,234.02364492416382,0.0,14.22117304801941,0.019014835357666016,0.04089689254760742
18,248.46217489242554,0.0,14.342633962631226,0.024114131927490234,0.04044628143310547
19,262.97147703170776,0.0,14.414648056030273,0.020859241485595703,0.04320693016052246
20,277.51807498931885,0.0,14.445325136184692,0.02061915397644043,0.04527902603149414
21,291.72455286979675,0.0,14.118755102157593,0.018305063247680664,0.03860187530517578
22,305.7307598590851,0.0,13.907339811325073,0.025774002075195312,0.04330182075500488
23,319.9725179672241,0.0,14.143085956573486,0.026429176330566406,0.03928399085998535
24,334.6198468208313,0.0,14.558645963668823,0.018419981002807617,0.040611982345581055
25,334.6934669017792,0.0,14.833635091781616,0.05421590805053711,0.034744977951049805
26,334.76594591140747,0.0,14.652632713317871,0.04960894584655762,0.03495192527770996
27,334.8367748260498,0.0,14.434834241867065,0.05187416076660156,0.033745765686035156
28,334.90478801727295,0.0,14.44191288948059,0.05200600624084473,0.03484606742858887
29,334.97107195854187,0.0,14.383614778518677,0.05340909957885742,0.03489398956298828
30,335.03357791900635,0.0,14.428982019424438,0.05594801902770996,0.03317403793334961
31,335.0993158817291,0.0,14.633114099502563,0.06006979942321777,0.03267407417297363
32,335.1604118347168,0.0,14.734619855880737,0.024211883544921875,0.03264427185058594
33,335.22314286231995,0.0,14.771543025970459,0.02060699462890625,0.031833648681640625
34,335.2858247756958,0.0,14.49685001373291,0.018761873245239258,0.03245997428894043
35,335.35280108451843,0.0,14.636382102966309,0.01962113380432129,0.03266024589538574
36,335.4178009033203,0.0,14.6562340259552,0.020127296447753906,0.03359103202819824
37,335.4934437274933,0.0,14.148974895477295,0.0194399356842041,0.0357513427734375
38,335.5619168281555,0.0,13.867480754852295,0.034219980239868164,0.0352780818939209
39,335.6298289299011,0.0,14.67985200881958,0.018423795700073242,0.03576397895812988
40,335.70038986206055,0.0,14.22117304801941,0.019014835357666016,0.03474092483520508
41,335.76173973083496,0.0,14.342633962631226,0.024114131927490234,0.034088850021362305
42,335.82668805122375,0.0,14.414648056030273,0.020859241485595703,0.035524845123291016
43,335.89778995513916,0.0,14.445325136184692,0.02061915397644043,0.03260684013366699
44,335.96434903144836,0.0,14.118755102157593,0.018305063247680664,0.03372907638549805
45,336.0327570438385,0.0,13.907339811325073,0.025774002075195312,0.03414607048034668
46,336.100124835968,0.0,14.143085956573486,0.026429176330566406,0.03422427177429199
47,336.1651678085327,0.0,14.558645963668823,0.018419981002807617,0.03461718559265137
48,336.23092103004456,0.0,14.833635091781616,0.05421590805053711,0.03377795219421387
49,336.2930130958557,0.0,14.652632713317871,0.04960894584655762,0.03247690200805664
50,336.3586597442627,0.0,14.434834241867065,0.05187416076660156,0.032814741134643555
51,336.42772674560547,0.0,14.44191288948059,0.05200600624084473,0.03534889221191406
52,336.4955668449402,0.0,14.383614778518677,0.05340909957885742,0.035080909729003906
53,336.5676679611206,0.0,14.428982019424438,0.05594801902770996,0.03518486022949219
54,336.63760900497437,0.0,14.633114099502563,0.06006979942321777,0.036026954650878906
55,336.70618176460266,0.0,14.734619855880737,0.024211883544921875,0.03513312339782715
56,336.7713508605957,0.0,14.771543025970459,0.02060699462890625,0.035199880599975586
57,336.83450388908386,0.0,14.49685001373291,0.018761873245239258,0.032623291015625
58,336.89885902404785,0.0,14.636382102966309,0.01962113380432129,0.03280997276306152
59,336.9638080596924,0.0,14.6562340259552,0.020127296447753906,0.03553199768066406
60,337.02926802635193,0.0,14.148974895477295,0.0194399356842041,0.0352778434753418
61,337.091600894928,0.0,13.867480754852295,0.034219980239868164,0.03319215774536133
62,337.15366291999817,0.0,14.67985200881958,0.018423795700073242,0.03336000442504883
63,337.21978092193604,0.0,14.22117304801941,0.019014835357666016,0.03417682647705078
64,337.2847077846527,0.0,14.342633962631226,0.024114131927490234,0.033830881118774414
65,337.3573808670044,0.0,14.414648056030273,0.020859241485595703,0.03264188766479492
66,337.43092679977417,0.0,14.445325136184692,0.02061915397644043,0.03263688087463379
67,337.50409293174744,0.0,14.118755102157593,0.018305063247680664,0.032835960388183594
68,337.5805027484894,0.0,13.907339811325073,0.025774002075195312,0.03426527976989746
69,337.6448028087616,0.0,14.143085956573486,0.026429176330566406,0.033387184143066406
70,337.7131600379944,0.0,14.558645963668823,0.018419981002807617,0.032972097396850586
71,337.77878999710083,0.0,14.833635091781616,0.05421590805053711,0.033065080642700195
72,337.84793496131897,0.0,14.652632713317871,0.04960894584655762,0.032962799072265625
73,337.9150228500366,0.0,14.434834241867065,0.05187416076660156,0.03304696083068848
74,337.9858241081238,0.0,14.44191288948059,0.05200600624084473,0.03391408920288086
75,338.0553169250488,0.0,14.383614778518677,0.05340909957885742,0.03245091438293457
76,338.1167678833008,0.0,14.428982019424438,0.05594801902770996,0.03314685821533203
77,338.18533205986023,0.0,14.633114099502563,0.06006979942321777,0.034456729888916016
78,338.25078678131104,0.0,14.734619855880737,0.024211883544921875,0.03288698196411133
79,338.3148989677429,0.0,14.771543025970459,0.02060699462890625,0.03478693962097168
80,338.38261103630066,0.0,14.49685001373291,0.018761873245239258,0.035318851470947266
81,338.44670486450195,0.0,14.636382102966309,0.01962113380432129,0.03286385536193848
82,338.5198700428009,0.0,14.6562340259552,0.020127296447753906,0.034821271896362305
83,338.58895087242126,0.0,14.148974895477295,0.0194399356842041,0.03610801696777344
84,338.6544840335846,0.0,13.867480754852295,0.034219980239868164,0.0350339412689209
85,339.0865638256073,0.0,14.67985200881958,0.018423795700073242,0.40359973907470703
86,339.1540219783783,0.0,14.22117304801941,0.019014835357666016,0.0343470573425293
87,339.22329783439636,0.0,14.342633962631226,0.024114131927490234,0.034346818923950195
88,339.29110884666443,0.0,14.414648056030273,0.020859241485595703,0.032273054122924805
89,339.35986280441284,0.0,14.445325136184692,0.02061915397644043,0.03342413902282715
90,339.42033100128174,0.0,14.118755102157593,0.018305063247680664,0.03261280059814453
91,339.49005603790283,0.0,13.907339811325073,0.025774002075195312,0.03254389762878418
92,339.55876994132996,0.0,14.143085956573486,0.026429176330566406,0.034152984619140625
93,339.6197319030762,0.0,14.558645963668823,0.018419981002807617,0.03245902061462402
94,339.6808977127075,0.0,14.833635091781616,0.05421590805053711,0.03307294845581055
95,339.7468659877777,0.0,14.652632713317871,0.04960894584655762,0.03279399871826172
96,339.8123049736023,0.0,14.434834241867065,0.05187416076660156,0.03338909149169922
97,339.87658882141113,0.0,14.44191288948059,0.05200600624084473,0.032438039779663086
98,339.9454710483551,0.0,14.383614778518677,0.05340909957885742,0.03540396690368652
99,340.01489996910095,0.0,14.428982019424438,0.05594801902770996,0.03534507751464844
100,340.07738280296326,0.0,14.633114099502563,0.06006979942321777,0.035012006759643555
101,340.14617395401,0.0,14.734619855880737,0.024211883544921875,0.03350400924682617
102,340.213161945343,0.0,14.771543025970459,0.02060699462890625,0.034631967544555664
103,340.2775847911835,0.0,14.49685001373291,0.018761873245239258,0.03294515609741211
104,340.33592891693115,0.0,14.636382102966309,0.01962113380432129,0.03220105171203613
105,340.39728689193726,0.0,14.6562340259552,0.020127296447753906,0.032655954360961914
106,340.46419286727905,0.0,14.148974895477295,0.0194399356842041,0.03378105163574219
107,340.52942276000977,0.0,13.867480754852295,0.034219980239868164,0.032550811767578125
108,340.5910999774933,0.0,14.67985200881958,0.018423795700073242,0.03251481056213379
109,340.6544408798218,0.0,14.22117304801941,0.019014835357666016,0.034542083740234375
110,340.72535395622253,0.0,14.342633962631226,0.024114131927490234,0.03381991386413574
111,340.795166015625,0.0,14.414648056030273,0.020859241485595703,0.035552978515625
112,340.8653869628906,0.0,14.445325136184692,0.02061915397644043,0.03627490997314453
113,340.9384548664093,0.0,14.118755102157593,0.018305063247680664,0.0362699031829834
114,341.0072159767151,0.0,13.907339811325073,0.025774002075195312,0.037000179290771484
115,341.0762367248535,0.0,14.143085956573486,0.026429176330566406,0.03607177734375
116,341.13989090919495,0.0,14.558645963668823,0.018419981002807617,0.033342838287353516