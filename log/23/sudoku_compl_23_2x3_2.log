#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,16.00264811515808,4.1617431640625,15.79554033279419,0.05637192726135254,0.06725907325744629
3,32.39464092254639,3.812368154525757,16.179715156555176,0.056648969650268555,0.0685110092163086
4,48.73712396621704,2.541477680206299,16.137578010559082,0.05704903602600098,0.06696581840515137
5,65.23215508460999,0.29956620931625366,16.270692825317383,0.05821704864501953,0.0681760311126709
6,81.50956606864929,0.00020023203978780657,16.056942224502563,0.07070493698120117,0.06014585494995117
7,97.74574494361877,0.0,16.079144954681396,0.07541108131408691,0.038823843002319336
8,113.7991590499878,0.0,15.92438817024231,0.05288124084472656,0.03944230079650879
9,128.83219599723816,0.0,14.939774990081787,0.019911766052246094,0.04222607612609863
10,144.0635862350464,0.0,15.129258155822754,0.021024227142333984,0.040205955505371094
11,159.344496011734,0.0,15.188179969787598,0.020421981811523438,0.04160594940185547
12,174.13087010383606,0.0,14.692430019378662,0.02114272117614746,0.042112112045288086
13,189.05530095100403,0.0,14.83261489868164,0.02053689956665039,0.04369997978210449
14,203.32566905021667,0.0,14.175427913665771,0.022840023040771484,0.041964054107666016
15,217.82465410232544,0.0,14.403367042541504,0.025534868240356445,0.04120802879333496
16,232.68149209022522,0.0,14.760906219482422,0.02033090591430664,0.039314985275268555
17,247.2356722354889,0.0,14.435662031173706,0.02120804786682129,0.06676578521728516
18,261.81469202041626,0.0,14.483782052993774,0.025829792022705078,0.03873395919799805
19,275.9137842655182,0.0,13.999238729476929,0.023149967193603516,0.04123497009277344
20,290.13760328292847,0.0,14.128347158432007,0.02060532569885254,0.0401310920715332
21,304.64148116111755,0.0,14.401876211166382,0.028192996978759766,0.03935074806213379
22,318.74559712409973,0.0,14.009078979492188,0.023239850997924805,0.0401148796081543
23,333.7012372016907,0.0,14.86213207244873,0.022984027862548828,0.039492130279541016
24,347.53824400901794,0.0,13.743462085723877,0.025606155395507812,0.03930807113647461
25,347.60272121429443,0.0,15.79554033279419,0.05637192726135254,0.0357060432434082
26,347.67271518707275,0.0,16.179715156555176,0.056648969650268555,0.03329801559448242
27,347.73406410217285,0.0,16.137578010559082,0.05704903602600098,0.03420305252075195
28,347.7963480949402,0.0,16.270692825317383,0.05821704864501953,0.033670902252197266
29,347.8601312637329,0.0,16.056942224502563,0.07070493698120117,0.03464078903198242
30,347.92313504219055,0.0,16.079144954681396,0.07541108131408691,0.033901214599609375
31,347.99274706840515,0.0,15.92438817024231,0.05288124084472656,0.03527522087097168
32,348.0572199821472,0.0,14.939774990081787,0.019911766052246094,0.03435111045837402
33,348.1196460723877,0.0,15.129258155822754,0.021024227142333984,0.03185772895812988
34,348.18719124794006,0.0,15.188179969787598,0.020421981811523438,0.03191709518432617
35,348.249027967453,0.0,14.692430019378662,0.02114272117614746,0.03338003158569336
36,348.3166968822479,0.0,14.83261489868164,0.02053689956665039,0.03481006622314453
37,348.3876750469208,0.0,14.175427913665771,0.022840023040771484,0.035967111587524414
38,348.4503619670868,0.0,14.403367042541504,0.025534868240356445,0.03422713279724121
39,348.52027201652527,0.0,14.760906219482422,0.02033090591430664,0.033750057220458984
40,348.58495712280273,0.0,14.435662031173706,0.02120804786682129,0.03483390808105469
41,348.64856004714966,0.0,14.483782052993774,0.025829792022705078,0.03249311447143555
42,348.71454906463623,0.0,13.999238729476929,0.023149967193603516,0.0336918830871582
43,348.7817540168762,0.0,14.128347158432007,0.02060532569885254,0.0319368839263916
44,348.8474090099335,0.0,14.401876211166382,0.028192996978759766,0.03292226791381836
45,348.91125202178955,0.0,14.009078979492188,0.023239850997924805,0.033196210861206055
46,348.97841119766235,0.0,14.86213207244873,0.022984027862548828,0.034353017807006836
47,349.04613518714905,0.0,13.743462085723877,0.025606155395507812,0.035063982009887695
48,349.1161789894104,0.0,15.79554033279419,0.05637192726135254,0.03231072425842285
49,349.17740511894226,0.0,16.179715156555176,0.056648969650268555,0.0334320068359375
50,349.24201703071594,0.0,16.137578010559082,0.05704903602600098,0.032901763916015625
51,349.3098180294037,0.0,16.270692825317383,0.05821704864501953,0.03312182426452637
52,349.37055492401123,0.0,16.056942224502563,0.07070493698120117,0.03240704536437988
53,349.4302752017975,0.0,16.079144954681396,0.07541108131408691,0.032765865325927734
54,349.49772810935974,0.0,15.92438817024231,0.05288124084472656,0.032501935958862305
55,349.56636810302734,0.0,14.939774990081787,0.019911766052246094,0.03516197204589844
56,349.63538694381714,0.0,15.129258155822754,0.021024227142333984,0.03432607650756836
57,349.6984910964966,0.0,15.188179969787598,0.020421981811523438,0.03284716606140137
58,349.7601821422577,0.0,14.692430019378662,0.02114272117614746,0.03514575958251953
59,349.8256149291992,0.0,14.83261489868164,0.02053689956665039,0.03407597541809082
60,349.89354825019836,0.0,14.175427913665771,0.022840023040771484,0.034744977951049805
61,349.961462020874,0.0,14.403367042541504,0.025534868240356445,0.03566908836364746
62,350.0274040699005,0.0,14.760906219482422,0.02033090591430664,0.0351870059967041
63,350.0987730026245,0.0,14.435662031173706,0.02120804786682129,0.03611421585083008
64,350.1603469848633,0.0,14.483782052993774,0.025829792022705078,0.033538103103637695
65,350.22739696502686,0.0,13.999238729476929,0.023149967193603516,0.035588979721069336
66,350.2922172546387,0.0,14.128347158432007,0.02060532569885254,0.03592205047607422
67,350.3579909801483,0.0,14.401876211166382,0.028192996978759766,0.03539896011352539
68,350.4221851825714,0.0,14.009078979492188,0.023239850997924805,0.03359198570251465
69,350.48915696144104,0.0,14.86213207244873,0.022984027862548828,0.03428006172180176
70,350.5509798526764,0.0,13.743462085723877,0.025606155395507812,0.03287911415100098
71,350.61525797843933,0.0,15.79554033279419,0.05637192726135254,0.03405499458312988
72,350.68036794662476,0.0,16.179715156555176,0.056648969650268555,0.03344893455505371
73,350.7407341003418,0.0,16.137578010559082,0.05704903602600098,0.03502988815307617
74,350.8058371543884,0.0,16.270692825317383,0.05821704864501953,0.03629493713378906
75,350.87541103363037,0.0,16.056942224502563,0.07070493698120117,0.03565692901611328
76,350.94510221481323,0.0,16.079144954681396,0.07541108131408691,0.03374910354614258
77,351.0072159767151,0.0,15.92438817024231,0.05288124084472656,0.03432607650756836
78,351.07172417640686,0.0,14.939774990081787,0.019911766052246094,0.0350041389465332
79,351.14066910743713,0.0,15.129258155822754,0.021024227142333984,0.035880088806152344
80,351.2034261226654,0.0,15.188179969787598,0.020421981811523438,0.033705949783325195
81,351.27274203300476,0.0,14.692430019378662,0.02114272117614746,0.033991336822509766
82,351.3380858898163,0.0,14.83261489868164,0.02053689956665039,0.03398728370666504
83,351.4031171798706,0.0,14.175427913665771,0.022840023040771484,0.033937931060791016
84,351.4669530391693,0.0,14.403367042541504,0.025534868240356445,0.032402992248535156
85,351.8823812007904,0.0,14.760906219482422,0.02033090591430664,0.3855130672454834
86,351.9492392539978,0.0,14.435662031173706,0.02120804786682129,0.03266096115112305
87,352.0121970176697,0.0,14.483782052993774,0.025829792022705078,0.033901214599609375
88,352.07957005500793,0.0,13.999238729476929,0.023149967193603516,0.03530597686767578
89,352.1461901664734,0.0,14.128347158432007,0.02060532569885254,0.035485267639160156
90,352.2120590209961,0.0,14.401876211166382,0.028192996978759766,0.03561711311340332
91,352.2766969203949,0.0,14.009078979492188,0.023239850997924805,0.03310680389404297
92,352.341432094574,0.0,14.86213207244873,0.022984027862548828,0.03505587577819824
93,352.41357803344727,0.0,13.743462085723877,0.025606155395507812,0.03527998924255371
94,352.48060607910156,0.0,15.79554033279419,0.05637192726135254,0.034005165100097656
95,352.55187797546387,0.0,16.179715156555176,0.056648969650268555,0.03515911102294922
96,352.6168751716614,0.0,16.137578010559082,0.05704903602600098,0.035189151763916016
97,352.6809492111206,0.0,16.270692825317383,0.05821704864501953,0.03288602828979492
98,352.74781608581543,0.0,16.056942224502563,0.07070493698120117,0.0329442024230957
99,352.8162441253662,0.0,16.079144954681396,0.07541108131408691,0.03322601318359375
100,352.88624119758606,0.0,15.92438817024231,0.05288124084472656,0.0337216854095459
101,352.9496760368347,0.0,14.939774990081787,0.019911766052246094,0.03261685371398926
102,353.01128101348877,0.0,15.129258155822754,0.021024227142333984,0.03326296806335449
103,353.07481622695923,0.0,15.188179969787598,0.020421981811523438,0.034226179122924805
104,353.1374080181122,0.0,14.692430019378662,0.02114272117614746,0.033905982971191406
105,353.1991901397705,0.0,14.83261489868164,0.02053689956665039,0.032839059829711914
106,353.2616379261017,0.0,14.175427913665771,0.022840023040771484,0.03293800354003906
107,353.3259279727936,0.0,14.403367042541504,0.025534868240356445,0.03273916244506836
108,353.3893880844116,0.0,14.760906219482422,0.02033090591430664,0.033120155334472656
109,353.44814014434814,0.0,14.435662031173706,0.02120804786682129,0.03214716911315918
110,353.5082881450653,0.0,14.483782052993774,0.025829792022705078,0.03222513198852539
111,353.5707468986511,0.0,13.999238729476929,0.023149967193603516,0.03360390663146973
112,353.63286304473877,0.0,14.128347158432007,0.02060532569885254,0.03267168998718262
113,353.69524002075195,0.0,14.401876211166382,0.028192996978759766,0.03291893005371094
114,353.7608451843262,0.0,14.009078979492188,0.023239850997924805,0.032792091369628906
115,353.8216600418091,0.0,14.86213207244873,0.022984027862548828,0.03313779830932617
116,353.8895170688629,0.0,13.743462085723877,0.025606155395507812,0.03400874137878418