#{"solver": {"engine": {"type": "ExactEngine"}, "semiring": "GraphSemiring"}, "networks": [{"name": "sudoku_net", "module": "Sudoku_Net(\n  (conv1): Conv2d(1, 32, kernel_size=(4, 4), stride=(1, 1))\n  (conv1_bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout1): Dropout(p=0.25, inplace=False)\n  (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))\n  (conv2_bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout2): Dropout(p=0.25, inplace=False)\n  (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2))\n  (conv3_bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout3): Dropout(p=0.25, inplace=False)\n  (conv4): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))\n  (conv4_bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout4): Dropout(p=0.25, inplace=False)\n  (conv5): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))\n  (conv5_bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  (dropout5): Dropout(p=0.25, inplace=False)\n  (maxpool): MaxPool2d(kernel_size=6, stride=6, padding=0, dilation=1, ceil_mode=False)\n  (adaptive_avg_pool): AdaptiveAvgPool2d(output_size=(9, 9))\n  (conv1x1_1): Conv2d(512, 4, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_2): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))\n  (conv1x1_3): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))\n  (fc1): Linear(in_features=41472, out_features=810, bias=True)\n)", "optimizer": "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.001\n    maximize: False\n    weight_decay: 0\n)", "k": null}], "program": ":- use_module(library(lists)).\n:- use_module(library(apply)).\nnn(sudoku_net,[X, R, C],Y,[0, 1, 2, 3])::digit(X,R,C,Y).\ncreateFake2x3(X,[[D1, D2, D3], [D4, D5, D6]]) :- digit(X,1,1,D1), digit(X,1,2,D2), digit(X,1,3,D3), digit(X,2,1,D4), digit(X,2,2,D5), digit(X,2,3,D6).\ngiveRightNumber(0,_).\ngiveRightNumber(FH,FH).\nrealColumns([],[]).\nrealColumns(FakeCol,Col) :- FakeCol=[FH | FT], Col=[H | T], giveRightNumber(FH,H), realColumns(FT,T).\nrealRows([],[]).\nrealRows(FakeRows,Rows) :- FakeRows=[FH | FT], Rows=[H | T], realColumns(FH,H), realRows(FT,T).\ninList(X,[X | _]).\ninList(X,[_ | Tail]) :- inList(X,Tail).\nlistInList([],_).\nlistInList([H | T],L) :- inList(H,L), listInList(T,L).\nallDiff([]).\nallDiff([X | Tail]) :- \\+inList(X,Tail), allDiff(Tail).\ntranspose([[] | _],[]).\ntranspose(Matrix,[Row | Rows]) :- transpose_1st_col(Matrix,Row,RestMatrix), transpose(RestMatrix,Rows).\ntranspose_1st_col([],[],[]).\ntranspose_1st_col([[H | T] | Rows],[H | Hs],[T | Ts]) :- transpose_1st_col(Rows,Hs,Ts).\nsolve2x3_both(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake), label_compl(Label,Rows).\nsolve2x3_empty(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_empty(Label,Fake).\nsolve2x3_compl(X,Label) :- createFake2x3(X,Fake), realRows(Fake,Rows), maplist(listInList([1, 2, 3]),Rows), maplist(allDiff,Rows), transpose(Rows,Columns), maplist(allDiff,Columns), label_compl(Label,Rows).\nlabel_empty(1,L) :- L=[[1, 0, 0], [0, 1, 2]].\nlabel_empty(2,L) :- L=[[1, 0, 0], [0, 3, 1]].\nlabel_empty(3,L) :- L=[[1, 0, 0], [0, 1, 3]].\nlabel_empty(4,L) :- L=[[1, 0, 0], [0, 2, 1]].\nlabel_empty(5,L) :- L=[[2, 0, 0], [0, 3, 2]].\nlabel_empty(6,L) :- L=[[2, 0, 0], [0, 2, 1]].\nlabel_empty(7,L) :- L=[[3, 0, 0], [0, 2, 3]].\nlabel_empty(8,L) :- L=[[3, 0, 0], [0, 3, 1]].\nlabel_empty(9,L) :- L=[[2, 0, 0], [0, 2, 3]].\nlabel_empty(10,L) :- L=[[2, 0, 0], [0, 1, 2]].\nlabel_empty(11,L) :- L=[[3, 0, 0], [0, 3, 2]].\nlabel_empty(12,L) :- L=[[3, 0, 0], [0, 1, 3]].\nlabel_empty(13,L) :- L=[[0, 2, 3], [0, 0, 2]].\nlabel_empty(14,L) :- L=[[0, 2, 3], [0, 0, 1]].\nlabel_empty(15,L) :- L=[[0, 3, 2], [0, 0, 3]].\nlabel_empty(16,L) :- L=[[0, 3, 2], [0, 0, 1]].\nlabel_empty(17,L) :- L=[[0, 1, 3], [0, 0, 2]].\nlabel_empty(18,L) :- L=[[0, 1, 3], [0, 0, 1]].\nlabel_empty(19,L) :- L=[[0, 1, 2], [0, 0, 3]].\nlabel_empty(20,L) :- L=[[0, 1, 2], [0, 0, 1]].\nlabel_empty(21,L) :- L=[[0, 3, 1], [0, 0, 3]].\nlabel_empty(22,L) :- L=[[0, 3, 1], [0, 0, 2]].\nlabel_empty(23,L) :- L=[[0, 2, 1], [0, 0, 2]].\nlabel_empty(24,L) :- L=[[0, 2, 1], [0, 0, 3]].\nlabel_empty(25,L) :- L=[[0, 0, 3], [3, 1, 0]].\nlabel_empty(26,L) :- L=[[0, 0, 3], [2, 3, 0]].\nlabel_empty(27,L) :- L=[[0, 0, 2], [2, 1, 0]].\nlabel_empty(28,L) :- L=[[0, 0, 2], [3, 2, 0]].\nlabel_empty(29,L) :- L=[[0, 0, 3], [1, 3, 0]].\nlabel_empty(30,L) :- L=[[0, 0, 3], [3, 2, 0]].\nlabel_empty(31,L) :- L=[[0, 0, 2], [1, 2, 0]].\nlabel_empty(32,L) :- L=[[0, 0, 2], [2, 3, 0]].\nlabel_empty(33,L) :- L=[[0, 0, 1], [1, 2, 0]].\nlabel_empty(34,L) :- L=[[0, 0, 1], [3, 1, 0]].\nlabel_empty(35,L) :- L=[[0, 0, 1], [1, 3, 0]].\nlabel_empty(36,L) :- L=[[0, 0, 1], [2, 1, 0]].\nlabel_empty(37,L) :- L=[[1, 0, 0], [3, 1, 0]].\nlabel_empty(38,L) :- L=[[1, 0, 0], [2, 3, 0]].\nlabel_empty(39,L) :- L=[[1, 0, 0], [2, 1, 0]].\nlabel_empty(40,L) :- L=[[1, 0, 0], [3, 2, 0]].\nlabel_empty(41,L) :- L=[[2, 0, 0], [1, 3, 0]].\nlabel_empty(42,L) :- L=[[2, 0, 0], [3, 2, 0]].\nlabel_empty(43,L) :- L=[[3, 0, 0], [1, 2, 0]].\nlabel_empty(44,L) :- L=[[3, 0, 0], [2, 3, 0]].\nlabel_empty(45,L) :- L=[[2, 0, 0], [1, 2, 0]].\nlabel_empty(46,L) :- L=[[2, 0, 0], [3, 1, 0]].\nlabel_empty(47,L) :- L=[[3, 0, 0], [1, 3, 0]].\nlabel_empty(48,L) :- L=[[3, 0, 0], [2, 1, 0]].\nlabel_empty(49,L) :- L=[[1, 0, 3], [3, 0, 0]].\nlabel_empty(50,L) :- L=[[1, 0, 3], [2, 0, 0]].\nlabel_empty(51,L) :- L=[[1, 0, 2], [2, 0, 0]].\nlabel_empty(52,L) :- L=[[1, 0, 2], [3, 0, 0]].\nlabel_empty(53,L) :- L=[[2, 0, 3], [1, 0, 0]].\nlabel_empty(54,L) :- L=[[2, 0, 3], [3, 0, 0]].\nlabel_empty(55,L) :- L=[[3, 0, 2], [1, 0, 0]].\nlabel_empty(56,L) :- L=[[3, 0, 2], [2, 0, 0]].\nlabel_empty(57,L) :- L=[[2, 0, 1], [1, 0, 0]].\nlabel_empty(58,L) :- L=[[2, 0, 1], [3, 0, 0]].\nlabel_empty(59,L) :- L=[[3, 0, 1], [1, 0, 0]].\nlabel_empty(60,L) :- L=[[3, 0, 1], [2, 0, 0]].\nlabel_empty(61,L) :- L=[[0, 2, 0], [3, 0, 2]].\nlabel_empty(62,L) :- L=[[0, 2, 0], [2, 0, 1]].\nlabel_empty(63,L) :- L=[[0, 3, 0], [2, 0, 3]].\nlabel_empty(64,L) :- L=[[0, 3, 0], [3, 0, 1]].\nlabel_empty(65,L) :- L=[[0, 1, 0], [1, 0, 2]].\nlabel_empty(66,L) :- L=[[0, 1, 0], [3, 0, 1]].\nlabel_empty(67,L) :- L=[[0, 1, 0], [1, 0, 3]].\nlabel_empty(68,L) :- L=[[0, 1, 0], [2, 0, 1]].\nlabel_empty(69,L) :- L=[[0, 3, 0], [1, 0, 3]].\nlabel_empty(70,L) :- L=[[0, 3, 0], [3, 0, 2]].\nlabel_empty(71,L) :- L=[[0, 2, 0], [1, 0, 2]].\nlabel_empty(72,L) :- L=[[0, 2, 0], [2, 0, 3]].\nlabel_empty(73,L) :- L=[[1, 0, 3], [0, 1, 0]].\nlabel_empty(74,L) :- L=[[1, 0, 3], [0, 3, 0]].\nlabel_empty(75,L) :- L=[[1, 0, 2], [0, 1, 0]].\nlabel_empty(76,L) :- L=[[1, 0, 2], [0, 2, 0]].\nlabel_empty(77,L) :- L=[[2, 0, 3], [0, 3, 0]].\nlabel_empty(78,L) :- L=[[2, 0, 3], [0, 2, 0]].\nlabel_empty(79,L) :- L=[[3, 0, 2], [0, 2, 0]].\nlabel_empty(80,L) :- L=[[3, 0, 2], [0, 3, 0]].\nlabel_empty(81,L) :- L=[[2, 0, 1], [0, 2, 0]].\nlabel_empty(82,L) :- L=[[2, 0, 1], [0, 1, 0]].\nlabel_empty(83,L) :- L=[[3, 0, 1], [0, 3, 0]].\nlabel_empty(84,L) :- L=[[3, 0, 1], [0, 1, 0]].\nlabel_empty(85,L) :- L=[[1, 0, 3], [0, 0, 2]].\nlabel_empty(86,L) :- L=[[1, 0, 3], [0, 0, 1]].\nlabel_empty(87,L) :- L=[[1, 0, 2], [0, 0, 3]].\nlabel_empty(88,L) :- L=[[1, 0, 2], [0, 0, 1]].\nlabel_empty(89,L) :- L=[[2, 0, 3], [0, 0, 2]].\nlabel_empty(90,L) :- L=[[2, 0, 3], [0, 0, 1]].\nlabel_empty(91,L) :- L=[[3, 0, 2], [0, 0, 3]].\nlabel_empty(92,L) :- L=[[3, 0, 2], [0, 0, 1]].\nlabel_empty(93,L) :- L=[[2, 0, 1], [0, 0, 3]].\nlabel_empty(94,L) :- L=[[2, 0, 1], [0, 0, 2]].\nlabel_empty(95,L) :- L=[[3, 0, 1], [0, 0, 2]].\nlabel_empty(96,L) :- L=[[3, 0, 1], [0, 0, 3]].\nlabel_empty(97,L) :- L=[[0, 2, 0], [0, 1, 2]].\nlabel_empty(98,L) :- L=[[0, 2, 0], [0, 3, 1]].\nlabel_empty(99,L) :- L=[[0, 3, 0], [0, 1, 3]].\nlabel_empty(100,L) :- L=[[0, 3, 0], [0, 2, 1]].\nlabel_empty(101,L) :- L=[[0, 1, 0], [0, 3, 2]].\nlabel_empty(102,L) :- L=[[0, 1, 0], [0, 2, 1]].\nlabel_empty(103,L) :- L=[[0, 1, 0], [0, 2, 3]].\nlabel_empty(104,L) :- L=[[0, 1, 0], [0, 3, 1]].\nlabel_empty(105,L) :- L=[[0, 3, 0], [0, 2, 3]].\nlabel_empty(106,L) :- L=[[0, 3, 0], [0, 1, 2]].\nlabel_empty(107,L) :- L=[[0, 2, 0], [0, 3, 2]].\nlabel_empty(108,L) :- L=[[0, 2, 0], [0, 1, 3]].\nlabel_compl(1,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(2,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(3,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(4,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(5,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(6,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(7,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(8,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(9,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(10,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(11,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(12,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(13,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(14,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(15,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(16,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(17,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(18,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(19,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(20,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(21,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(22,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(23,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(24,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(25,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(26,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(27,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(28,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(29,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(30,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(31,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(32,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(33,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(34,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(35,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(36,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(37,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(38,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(39,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(40,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(41,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(42,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(43,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(44,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(45,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(46,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(47,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(48,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(49,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(50,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(51,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(52,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(53,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(54,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(55,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(56,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(57,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(58,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(59,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(60,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(61,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(62,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(63,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(64,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(65,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(66,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(67,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(68,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(69,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(70,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(71,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(72,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(73,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(74,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(75,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(76,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(77,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(78,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(79,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(80,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(81,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(82,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(83,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(84,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(85,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(86,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(87,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(88,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(89,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(90,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(91,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(92,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(93,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(94,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(95,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(96,L) :- L=[[3, 2, 1], [2, 1, 3]].\nlabel_compl(97,L) :- L=[[1, 2, 3], [3, 1, 2]].\nlabel_compl(98,L) :- L=[[1, 2, 3], [2, 3, 1]].\nlabel_compl(99,L) :- L=[[1, 3, 2], [2, 1, 3]].\nlabel_compl(100,L) :- L=[[1, 3, 2], [3, 2, 1]].\nlabel_compl(101,L) :- L=[[2, 1, 3], [1, 3, 2]].\nlabel_compl(102,L) :- L=[[2, 1, 3], [3, 2, 1]].\nlabel_compl(103,L) :- L=[[3, 1, 2], [1, 2, 3]].\nlabel_compl(104,L) :- L=[[3, 1, 2], [2, 3, 1]].\nlabel_compl(105,L) :- L=[[2, 3, 1], [1, 2, 3]].\nlabel_compl(106,L) :- L=[[2, 3, 1], [3, 1, 2]].\nlabel_compl(107,L) :- L=[[3, 2, 1], [1, 3, 2]].\nlabel_compl(108,L) :- L=[[3, 2, 1], [2, 1, 3]].\n"}
#Accuracy 0.0
i,time,loss,ground_time,compile_time,eval_time
2,13.902862787246704,4.079629898071289,13.686002969741821,0.08228492736816406,0.0636301040649414
3,27.923207998275757,3.7385151386260986,13.81571888923645,0.07500290870666504,0.0681760311126709
4,42.17213797569275,2.5175116062164307,14.025125741958618,0.0825510025024414,0.06551599502563477
5,56.9339280128479,0.2212844043970108,14.53485107421875,0.08101797103881836,0.06299805641174316
6,71.50050091743469,0.00014866502897348255,14.379928827285767,0.06637692451477051,0.058691978454589844
7,85.94362497329712,0.0,14.327792882919312,0.05024981498718262,0.036058902740478516
8,100.35796189308167,0.0,14.29463005065918,0.04871988296508789,0.03553605079650879
9,114.33149790763855,0.0,13.8873291015625,0.0184018611907959,0.038414955139160156
10,128.49378991127014,0.0,14.077585935592651,0.017987966537475586,0.038770198822021484
11,142.71913695335388,0.0,14.131627082824707,0.01876997947692871,0.03847098350524902
12,156.86843180656433,0.0,14.063894748687744,0.017972946166992188,0.03848123550415039
13,171.31536102294922,0.0,14.355801105499268,0.019341707229614258,0.0387110710144043
14,185.27033710479736,0.0,13.861654996871948,0.020011186599731445,0.03919696807861328
15,199.60324501991272,0.0,14.238038063049316,0.020377159118652344,0.0415501594543457
16,214.16611981391907,0.0,14.466847896575928,0.02535223960876465,0.03963899612426758
17,228.13807487487793,0.0,13.882153987884521,0.019001245498657227,0.04096102714538574
18,242.4117350578308,0.0,14.173926830291748,0.021809101104736328,0.0412747859954834
19,257.04849576950073,0.0,14.544841051101685,0.018624067306518555,0.03913712501525879
20,271.4236958026886,0.0,14.282634019851685,0.020161867141723633,0.041877031326293945
21,285.6952450275421,0.0,14.179095983505249,0.021481037139892578,0.04022216796875
22,299.7265329360962,0.0,13.937343835830688,0.023452043533325195,0.041043996810913086
23,314.000207901001,0.0,14.180105924606323,0.023431062698364258,0.040242910385131836
24,328.01425194740295,0.0,13.917839050292969,0.02342677116394043,0.04271292686462402
25,328.0803997516632,0.0,13.686002969741821,0.08228492736816406,0.03326106071472168
26,328.1409537792206,0.0,13.81571888923645,0.07500290870666504,0.0324862003326416
27,328.2168378829956,0.0,14.025125741958618,0.0825510025024414,0.034004926681518555
28,328.2825417518616,0.0,14.53485107421875,0.08101797103881836,0.03320598602294922
29,328.345890045166,0.0,14.379928827285767,0.06637692451477051,0.032507896423339844
30,328.41533184051514,0.0,14.327792882919312,0.05024981498718262,0.03292107582092285
31,328.4825737476349,0.0,14.29463005065918,0.04871988296508789,0.0345158576965332
32,328.5473370552063,0.0,13.8873291015625,0.0184018611907959,0.032614946365356445
33,328.6170938014984,0.0,14.077585935592651,0.017987966537475586,0.033249855041503906
34,328.67543387413025,0.0,14.131627082824707,0.01876997947692871,0.03266286849975586
35,328.7357368469238,0.0,14.063894748687744,0.017972946166992188,0.03316092491149902
36,328.8049647808075,0.0,14.355801105499268,0.019341707229614258,0.03474617004394531
37,328.8726398944855,0.0,13.861654996871948,0.020011186599731445,0.03417015075683594
38,328.93577694892883,0.0,14.238038063049316,0.020377159118652344,0.0344388484954834
39,328.99788188934326,0.0,14.466847896575928,0.02535223960876465,0.03403067588806152
40,329.0615408420563,0.0,13.882153987884521,0.019001245498657227,0.033576011657714844
41,329.12738490104675,0.0,14.173926830291748,0.021809101104736328,0.03249192237854004
42,329.19052386283875,0.0,14.544841051101685,0.018624067306518555,0.03292584419250488
43,329.26048588752747,0.0,14.282634019851685,0.020161867141723633,0.031852006912231445
44,329.3244071006775,0.0,14.179095983505249,0.021481037139892578,0.03277993202209473
45,329.3842418193817,0.0,13.937343835830688,0.023452043533325195,0.031970977783203125
46,329.4527428150177,0.0,14.180105924606323,0.023431062698364258,0.0332794189453125
47,329.5165250301361,0.0,13.917839050292969,0.02342677116394043,0.03295278549194336
48,329.58072876930237,0.0,13.686002969741821,0.08228492736816406,0.03233981132507324
49,329.64524698257446,0.0,13.81571888923645,0.07500290870666504,0.032012939453125
50,329.70610880851746,0.0,14.025125741958618,0.0825510025024414,0.03365683555603027
51,329.76940393447876,0.0,14.53485107421875,0.08101797103881836,0.03418993949890137
52,329.83449387550354,0.0,14.379928827285767,0.06637692451477051,0.03233790397644043
53,329.89263796806335,0.0,14.327792882919312,0.05024981498718262,0.03184199333190918
54,329.957487821579,0.0,14.29463005065918,0.04871988296508789,0.032025814056396484
55,330.0228319168091,0.0,13.8873291015625,0.0184018611907959,0.03331279754638672
56,330.0957360267639,0.0,14.077585935592651,0.017987966537475586,0.034354209899902344
57,330.1586570739746,0.0,14.131627082824707,0.01876997947692871,0.033876895904541016
58,330.2243928909302,0.0,14.063894748687744,0.017972946166992188,0.034395694732666016
59,330.2864661216736,0.0,14.355801105499268,0.019341707229614258,0.032109975814819336
60,330.3440749645233,0.0,13.861654996871948,0.020011186599731445,0.032050132751464844
61,330.4095540046692,0.0,14.238038063049316,0.020377159118652344,0.03355288505554199
62,330.47571301460266,0.0,14.466847896575928,0.02535223960876465,0.03390908241271973
63,330.5406060218811,0.0,13.882153987884521,0.019001245498657227,0.03373908996582031
64,330.59664487838745,0.0,14.173926830291748,0.021809101104736328,0.03211712837219238
65,330.6644837856293,0.0,14.544841051101685,0.018624067306518555,0.03354811668395996
66,330.7294430732727,0.0,14.282634019851685,0.020161867141723633,0.03375697135925293
67,330.8016929626465,0.0,14.179095983505249,0.021481037139892578,0.03372597694396973
68,330.86721897125244,0.0,13.937343835830688,0.023452043533325195,0.0316309928894043
69,330.9434030056,0.0,14.180105924606323,0.023431062698364258,0.032679080963134766
70,331.0109477043152,0.0,13.917839050292969,0.02342677116394043,0.033351898193359375
71,331.08141684532166,0.0,13.686002969741821,0.08228492736816406,0.03364086151123047
72,331.1416869163513,0.0,13.81571888923645,0.07500290870666504,0.03290438652038574
73,331.2038428783417,0.0,14.025125741958618,0.0825510025024414,0.03251314163208008
74,331.2693428993225,0.0,14.53485107421875,0.08101797103881836,0.03377985954284668
75,331.33612179756165,0.0,14.379928827285767,0.06637692451477051,0.032922983169555664
76,331.4015758037567,0.0,14.327792882919312,0.05024981498718262,0.03299713134765625
77,331.46409487724304,0.0,14.29463005065918,0.04871988296508789,0.035275936126708984
78,331.5305619239807,0.0,13.8873291015625,0.0184018611907959,0.036269187927246094
79,331.59702610969543,0.0,14.077585935592651,0.017987966537475586,0.034684181213378906
80,331.6608588695526,0.0,14.131627082824707,0.01876997947692871,0.03172111511230469
81,331.721951007843,0.0,14.063894748687744,0.017972946166992188,0.03188800811767578
82,331.7826917171478,0.0,14.355801105499268,0.019341707229614258,0.03244614601135254
83,331.8427948951721,0.0,13.861654996871948,0.020011186599731445,0.034010887145996094
84,331.9048728942871,0.0,14.238038063049316,0.020377159118652344,0.03432297706604004
85,332.38358187675476,0.0,14.466847896575928,0.02535223960876465,0.4411461353302002
86,332.44463896751404,0.0,13.882153987884521,0.019001245498657227,0.03214907646179199
87,332.5103271007538,0.0,14.173926830291748,0.021809101104736328,0.03268909454345703
88,332.57174706459045,0.0,14.544841051101685,0.018624067306518555,0.03370213508605957
89,332.63627076148987,0.0,14.282634019851685,0.020161867141723633,0.035196781158447266
90,332.70014476776123,0.0,14.179095983505249,0.021481037139892578,0.032646894454956055
91,332.7611219882965,0.0,13.937343835830688,0.023452043533325195,0.032534122467041016
92,332.8223149776459,0.0,14.180105924606323,0.023431062698364258,0.03261399269104004
93,332.8813669681549,0.0,13.917839050292969,0.02342677116394043,0.03226900100708008
94,332.9423007965088,0.0,13.686002969741821,0.08228492736816406,0.034233808517456055
95,333.0072109699249,0.0,13.81571888923645,0.07500290870666504,0.03508806228637695
96,333.07030987739563,0.0,14.025125741958618,0.0825510025024414,0.03239703178405762
97,333.1281888484955,0.0,14.53485107421875,0.08101797103881836,0.03249788284301758
98,333.1927490234375,0.0,14.379928827285767,0.06637692451477051,0.03219270706176758
99,333.25492000579834,0.0,14.327792882919312,0.05024981498718262,0.032827138900756836
100,333.32036685943604,0.0,14.29463005065918,0.04871988296508789,0.034742116928100586
101,333.39491295814514,0.0,13.8873291015625,0.0184018611907959,0.03295183181762695
102,333.4625070095062,0.0,14.077585935592651,0.017987966537475586,0.032279014587402344
103,333.5294358730316,0.0,14.131627082824707,0.01876997947692871,0.032610177993774414
104,333.5887768268585,0.0,14.063894748687744,0.017972946166992188,0.03322792053222656
105,333.6472749710083,0.0,14.355801105499268,0.019341707229614258,0.03288888931274414
106,333.7110538482666,0.0,13.861654996871948,0.020011186599731445,0.033202171325683594
107,333.77401185035706,0.0,14.238038063049316,0.020377159118652344,0.03453683853149414
108,333.8414168357849,0.0,14.466847896575928,0.02535223960876465,0.03457999229431152
109,333.90401887893677,0.0,13.882153987884521,0.019001245498657227,0.03307008743286133
110,333.9675178527832,0.0,14.173926830291748,0.021809101104736328,0.03443622589111328
111,334.0322890281677,0.0,14.544841051101685,0.018624067306518555,0.03530597686767578
112,334.1008269786835,0.0,14.282634019851685,0.020161867141723633,0.03261399269104004
113,334.1650140285492,0.0,14.179095983505249,0.021481037139892578,0.03278803825378418
114,334.23321890830994,0.0,13.937343835830688,0.023452043533325195,0.032749176025390625
115,334.29794478416443,0.0,14.180105924606323,0.023431062698364258,0.03228425979614258
116,334.36449098587036,0.0,13.917839050292969,0.02342677116394043,0.03409409523010254